# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2016, Kolab Systems AG
# This file is distributed under the same license as the Kolab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kolab 16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-28 12:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/deployment-guide/storage.rst:88
# 328b1c099b654ae9bf5145692081398e
msgid "2"
msgstr ""

#: ../../source/deployment-guide/storage.rst:94
# 06f72388e07942baadd04eefbe5980c1
msgid "Storage Considerations for Kolab"
msgstr ""

#: ../../source/deployment-guide/storage.rst:96
# cee4759c32e1407eafa217eef8f2acd3
msgid "Storage considerations are a complex matter as the various options provide or restrict one's ability to adjust the necessary parameters as the need arises. It is foremost a challenge to clearly articulate and prioritize the criteria for storage, and map the theory on to a practical implementation design."
msgstr ""

#: ../../source/deployment-guide/storage.rst:102
# 09e492e79b734d8ca5bd6bd1596b4ec7
msgid "This article intends to provide information and outline details, and sometimes opinions and recommendations, but it is not a guide to providing you with the storage solution that you want or require."
msgstr ""

#: ../../source/deployment-guide/storage.rst:106
# e5b5879f03f8465ca353ab6e2e7e5f36
msgid "Generally, the most important considerations for storage include;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:108
# 16206cf8816046d2b8ceead4fc18730e
msgid ":ref:`deployment-storage-redundancy`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:110
# 2aa1df6cc1b040a999782ff74058433b
msgid "because nothing is as humiliating as losing all your data."
msgstr ""

#: ../../source/deployment-guide/storage.rst:112
# 1dc739db6dfe4b019c341082c817f3c9
msgid ":ref:`deployment-storage-availability`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:114
# 8abb011d234e41f1ad16ad25674c5be6
msgid "because nothing is more stressful than none of your data being available."
msgstr ""

#: ../../source/deployment-guide/storage.rst:117
# 545054957cd5457bbff04af4f6d8406e
msgid ":ref:`deployment-storage-performance`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:119
# 3e03a4b644674c45afdc439c70cca2d2
msgid "because nothing is as annoying as waiting, followed by some more waiting."
msgstr ""

#: ../../source/deployment-guide/storage.rst:122
# a3895e1667824830857cc0342066f312
msgid ":ref:`deployment-storage-scalability`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:124
# f349d9a1212840abb87a6d308b53f44d
msgid "because ``-ENOSPC`` is good only when it applies to your stomach."
msgstr ""

#: ../../source/deployment-guide/storage.rst:126
# 8ff8b531637540f594de93084609ad8b
msgid ":ref:`deployment-storage-capacity`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:128
# 78d9f855a6da4d8f82b3a4df8e8495b2
msgid "because your data must be available, backed up and archived."
msgstr ""

#: ../../source/deployment-guide/storage.rst:130
# ee48f22544374d0f92fcc05ade3fce7d
msgid ":ref:`deployment-storage-cost`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:132
# 147365aca128409185280aaba13c2f89
msgid "because you can't buy a beer or feed a family with an empty wallet."
msgstr ""

#: ../../source/deployment-guide/storage.rst:134
# 256efa1833e546b0a2102f3035ba7905
msgid "Storage is not a part of Kolab Groupware, in that Kolab does not ship a particular storage solution as part of the product, and it has no particular requirements for storage either."
msgstr ""

#: ../../source/deployment-guide/storage.rst:138
# 69cc2d0215d14ecaa5df05df84f74ea2
msgid "As such, your SAN, NAS, local disk, local array of disks or network share or even the flash drive of a Raspberry Pi could be used, although the following considerations are important:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:142
# 7404651e999b47a78e6518c70c5a17d1
msgid "The Kolab Groupware IMAP spool is I/O intensive (large volumes of data are read and get written)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:145
# 7c8df13c23ea4e7db06287e837ea35b5
msgid "The IMAP spool consists of many small files."
msgstr ""

#: ../../source/deployment-guide/storage.rst:147
# 58c71c7714b547958c5b6d9cf7b8c51c
msgid "As such, we recommend you take into account;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:149
# f4bab413f0264349a6e38fbc957b958c
msgid "The available bandwidth between the IMAP server and the storage provider, if at all on the network,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:152
# ba61d678c05840e7905c1a2f727cabca
msgid "The (network) protocol overhead, if any, should file-level read and/or write locking be required or implied."
msgstr ""

#: ../../source/deployment-guide/storage.rst:155
# 5c591be01e654ffeaffb0a474fb93d15
msgid "Atomic file operations (TODO: Explain this)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:157
# 96447e04c5924603a349264146980344
msgid "Parallel access (such as shared mailboxes or multi-client attendance) -- TODO: Explain this, too."
msgstr ""

#: ../../source/deployment-guide/storage.rst:161
# ef6c5730336948d7b870009c9367ef53
msgid "General Notes on Storage"
msgstr ""

#: ../../source/deployment-guide/storage.rst:163
# 8f1b5477bf4a4456a5fd00a1fc820089
msgid "The aforementioned considerations :ref:`deployment-storage-redundancy`, :ref:`deployment-storage-availability`, :ref:`deployment-storage-performance`, :ref:`deployment-storage-scalability`, :ref:`deployment-storage-capacity` and :ref:`deployment-storage-cost` are not all of them equally important -- not to all organizations, and not to all requirements when the priorities are set out against the implied cost of the ideal solution."
msgstr ""

#: ../../source/deployment-guide/storage.rst:171
# c9cbd9644f3c47fc80041c39c285994e
msgid "They are also not mutually exclusive in that, for example, redundancy may partly address some of the availability concerns -- depending on the exact nature of the final deployment of course, and backup/recovery capabilities in turn may parly address redundancy requirements."
msgstr ""

#: ../../source/deployment-guide/storage.rst:176
# dd3c00bb24514a15b2e0400bfb1355ed
msgid "What is deemed acceptable is another culprit -- often operational cost or familiarity of staff with a particular storage solution may get in the way of an otherwise appropriate storage solution."
msgstr ""

#: ../../source/deployment-guide/storage.rst:180
# f55a794f239f45b3ba48a4cfd0558c72
msgid "We believe that provided a sufficient amount of accurate information, however, you are able to make an informed choice, and that an informed choice is always better than an ill-informed one."
msgstr ""

#: ../../source/deployment-guide/storage.rst:187
# 6506d798dc66484b9568523d57992d29
msgid "Redundancy"
msgstr ""

#: ../../source/deployment-guide/storage.rst:189
# 0795b43fde264ce8a4a1de25ce0e50b6
msgid "Storage redundancy is achieved through replication of data. It is important to understand that, as a matter of design principle, redundancy does not in and by itself provide increased availability."
msgstr ""

#: ../../source/deployment-guide/storage.rst:193
# 94057dc6f93f4d80ac04bf0f9dd1e603
msgid "How redundancy could increase availability depends on the exact implementation, and the various options for practical implementation each have their own set of implications for cases of failure and the need to, under certain circumstances, failover and/or recover."
msgstr ""

#: ../../source/deployment-guide/storage.rst:198
# 06777afc38c04d509a81a2ec629c4157
msgid "How redundancy is achieved in an \"acceptable\" manner is another subject open to interpretation; it is sometimes deemed acceptable to create backups daily, and therefore potentially accept the loss of up to one day's worth of information from live spools -- which may or may not be recoverable through different means. More commonly however is to not settle for less than real-time replication of data."
msgstr ""

#: ../../source/deployment-guide/storage.rst:205
# 73f1c8f1666642ae9630e46915109c8d
msgid "While storage ultimately amounts to disks, it is important to understand that a number of (virtual) devices, channels, links and interfaces exist between an application operating data on disk [#]_, and the physical sectors and blocks of storage on that disk. In a way, this number of layers can be compared with the `OSI model for networking`_ -- but it is not the same at all."
msgstr ""

#: ../../source/deployment-guide/storage.rst:212
# 15d14eb183684be3ab55a5d4e08ba692
msgid "This section addresses the most commonly used levels at which replication can be applied."
msgstr ""

#: ../../source/deployment-guide/storage.rst:216
# 88d9f73119434c20ad6441373c935cec
msgid "Storage Volume Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:218
# be70d72716854d17ae6454b6d67c9be5
msgid "When using the term :term:`storage volume level replication` we mean to indicate the replication of :term:`disk volumes` as a whole. A simplistic replication scenario of a data disk between two nodes could look as follows:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:260
# ab619b3c0fb644d18e34a9ad21166279
msgid "For a fully detailed picture of the internal structures, please see the `DRBD`_ website, the canonical experts on this level of replication."
msgstr ""

#: ../../source/deployment-guide/storage.rst:263
# cf87a9f206bd492e9e349cd700fb1ca8
msgid "At the time of this writing, the DRBD website has an excellent diagram on its front page, explaining why one master is active, and slaves are not:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:270
# 99bc3a9f9bbe469c9a14e56a1f69c3dd
msgid "As illustrated, normally, storage-level replication occurs in such fashion, that it can be compared with a distributed version of a RAID-1 array. This incurs limitations that need to be evaluated carefully."
msgstr ""

#: ../../source/deployment-guide/storage.rst:274
# dbc8dd99bd474a1cb93115646c605ea3
msgid "In a hardware RAID-1 array, storage is physically constrained to a single node, and pairs of replicated disks are treated as one. In a software RAID-1 array, it is the operating system's software RAID driver that can (must) address the individual disks, but makes the array appear as a single disk to all higher-level software. Here too, the disks are physically constrained to one physical node."
msgstr ""

#: ../../source/deployment-guide/storage.rst:281
# 53ef19cdc3454759aedd67f09d96a052
msgid "In both cases, a *single point of control* exists with full and exclusive access to the physical disk device(s), namely the interface for *all higher-level software* to interact with the storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:285
# f82eaeff1f7f492eb5c6a78acf60becc
msgid "This is the underlying cause of the storage-level replication conundrum."
msgstr ""

#: ../../source/deployment-guide/storage.rst:287
# ceebb9950e4a4c728e38ec808bd5e91b
msgid "To illustrate the conundrum, we use a software RAID-1 array. The individual disk volumes that make up the RAID-1 array are not hidden from the rest of the operating system, but more importantly, direct access to the underlying device is not prohibited. With an example pair ``sda2`` and ``sdb2``, nothing prevents you from executing ``mkfs.ext4`` on ``/dev/sdb2`` thereby corrupting the array -- other than perhaps not having the necessary administrative privileges."
msgstr ""

#: ../../source/deployment-guide/storage.rst:295
# 72a45ed790a14227b3e955d053d7553b
msgid "To further illustrate, position one disk in the RAID-1 array on the other side of a network (such as is a `DRBD`_ topology, as illustrated). Since now two nodes participate in nurturing the mirrored volume, two points of control exist -- each node controls the access to its local disk device(s)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:301
# aa888671a9e64796ab79b1a2fe8d705d
msgid "Participating nodes are **required** to successfully coordinate their I/O with one another, which on the level of entire storage volumes is a very impractical effort with high latency and enormous overhead, should more than one node be allowed, to access the replicated device [#]_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:306
# cfd242af2c284065825bfe121b1c2ceb
msgid "It is therefore understood that, using storage level replication;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:308
# f13b19f4ecd24e8d9a1a093beee7a2a2
msgid "Only one side of the mirrored volume can be active (master), and the other side must remain passive (slave),"
msgstr ""

#: ../../source/deployment-guide/storage.rst:311
# aa6cafd393cb41689b263d06747e257d
msgid "The active and passive nodes therefore have a cluster solution implemented to manage application's failover and management of the change in replication topology (a slave becomes the I/O master, the former master becomes the replication slave, and other slaves, if any, learn about the new master to replicate from),"
msgstr ""

#: ../../source/deployment-guide/storage.rst:317
# 579043778f424a449455a8bd415d3058
msgid "Failover implementations include the STONITH principle, ensuring no two nodes in parallel perform I/O on the same volume at any given time."
msgstr ""

#: ../../source/deployment-guide/storage.rst:323
# 00e0fc70236d47fdbf874c5f799e8557
msgid "Storage-level replication does not protect against filesystem or payload corruption -- the replication happily mirrors the \"faulty\" bits as it is completely agnostic to the bits' relevance."
msgstr ""

#: ../../source/deployment-guide/storage.rst:329
# 6a228b65bbc84e04b04cdf07cf865bb6
msgid "For the reasons outlined in this section, storage volume level replication has only a limited number of Kolab Groupware deployment scenarios for which it would be recommended -- such as *Disaster Recovery Failover*."
msgstr ""

#: ../../source/deployment-guide/storage.rst:337
# a76368aebb4c4d23a4643cf5d716d09f
msgid "Integrated Storage Protocol Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:339
# cd175fe0adc647e098e7f648840b862a
msgid "Integrated storage protocol level replication is a different approach to making storage volumes redundant, applying the replication on a different level."
msgstr ""

#: ../../source/deployment-guide/storage.rst:343
# e4486bab43694be1a3f7f1642b291f5d
msgid "Integrated storage protocol level replication isn't necessarily limited to replication for the purposes of redundancy only, as it may already include parallel access controls, distribution across multiple storage nodes (each providing a part of the total storage volume available), enabling the use of cheap commodity hardware to provide the individual parts (called \"bricks\") that make up the larger volume."
msgstr ""

#: ../../source/deployment-guide/storage.rst:350
# 8388674b64be4db19f1a0f90a5cc1223
msgid "Additional features may include the use of a geographically oriented set of parameters for the calculation and assignment of replicated chunks of data (ie. \"brick replication topology\")."
msgstr ""

#: ../../source/deployment-guide/storage.rst:387
# 9bafcdb486154570b4f55060518d34cc
msgid "Current implementations of this type of technology include `GlusterFS`_ and `Ceph`_. Put way too simplistically, both technologies apply very smart ways of storing individual objects, sometimes with additional facilities for certain object types. How they work exactly is far beyond the scope of this document."
msgstr ""

#: ../../source/deployment-guide/storage.rst:393
# 0b80e0a23e1642cb88581e48cf8b4d32
msgid "Both technologies however are considered more efficient for fewer larger objects, than they are for more smaller objects. Both storage solutions also tend to be more efficient at addressing individual objects directly, rather than hierarchies of objects (for listing)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:398
# a05dac4ee2074b6caf044c54d9d0fe0b
msgid "This is meant to indicate that while both solutions scale up to millions of objects, they facilitate a particular **I/O pattern** better than the I/O pattern typically associated with a large volume of messages in IMAP spools. More frequent and very short-lived I/O against individual objects in a filesystem mounted directly causes a significant amount of overhead in negotiating the access to the objects across the storage cluster."
msgstr ""

#: ../../source/deployment-guide/storage.rst:406
# 00226e13bd564dbbbcbbfc2a32d0bade
msgid "Both technologies are perfectly suitable for large clusters with relatively small filesystems (see `Filesystems: Smaller is Better`_) if they are mounted directly from the storage clients. They are particularly feasible if not too many parallel write operations to individual objects (files) are likely to occur (think, for example, of web application servers and (asset-)caching proxies)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:413
# e830191e4df4453580dabc6cfba8fe59
msgid "Alternatively, fewer larger objects could be stored -- such as disk images for a virtualization environment. The I/O patterns internal to the virtual machine would remain the same, but the I/O pattern of the storage client (the hypervisor) is the equivalent of a single lock-and-open when the virtual machine starts."
msgstr ""

#: ../../source/deployment-guide/storage.rst:419
# 1ac38833de464c5d99d501f5380ad502
msgid "It is therefore understood that, especially in deployments of a larger scale, one should not mount a GlusterFS or CephFS filesystem directly from within an IMAP server, as an individual IMAP mail spool consists of many very small objects each individually addressed frequently, and in short-lived I/O operations, and consider the use of these distributed filesystems for a different level of object storage, such as disk images for a virtualization environment:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:482
# a01f71e9b099458194d464fc34e31d55
msgid "In this illustration, *Hypervisor #1* and *Hypervisor #2* are storage clients, and replicated bricks hold the disk images of each guest."
msgstr ""

#: ../../source/deployment-guide/storage.rst:485
# 0831ea8268594756947bb09dab6e5ba9
msgid "Each hypervisor can, in parallel, perform I/O against each individual disk image, allowing (for example) both *Hypervisor #1* and *Hypervisor #2* to run guests with disk images for which *Brick #3* has been selected as the authoritative copy."
msgstr ""

#: ../../source/deployment-guide/storage.rst:493
# 598977921f72479fb3f2f0a5948f3396
msgid "Application Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:495
# 20435bf238094335b471c6a7ec00ae1b
msgid "Yet another means to provide redundancy of data is to use application- level replication where available."
msgstr ""

#: ../../source/deployment-guide/storage.rst:498
# c54f5add8a9341328e357703de0ec78c
msgid "Famous examples include database server replication, where one or more MySQL masters are used for write operations, and one or more MySQL slaves are used for read operations, and LDAP replication."
msgstr ""

#: ../../source/deployment-guide/storage.rst:502
# 5e0ad1385dce4ff0b3ead18537310f73
msgid "Cyrus IMAP can also replicate its mail spools to other systems, such that multiple backends hold the payload served to your users."
msgstr ""

#: ../../source/deployment-guide/storage.rst:506
# 925784fb294f4e29b5a230f8a849dbf3
msgid "Shared Storage (Generic)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:508
# 680729cb82d94e828aae378b9c77a1fc
msgid "Contrary to popular belief, all shared storage -- NFS, iSCSI and FC alike -- are **not** storage devices. They are *network protocols* for which the application just so happens to be storage -- with perhaps the exception to the rule being Fiber-Channel not strictly cohering to the `OSI model for networking`_, although its own 5-layer model equates."
msgstr ""

#: ../../source/deployment-guide/storage.rst:514
# c9685291364843829df5960f13401bd0
msgid "iSCSI and Fiber-Channel LUNs however are *mapped* to storage devices by your favorite operating system's drivers for each technology, or possibly by a hardware device (an :term:`HBA`, or in iSCSI, an *initiator*)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:519
# 18b7beb5141749dfb5cf04b7ee29844b
msgid "As such, use of these network protocols for which the purpose just so happens to be storage does **not** provide redundancy."
msgstr ""

#: ../../source/deployment-guide/storage.rst:522
# f92c0bcfac1042c7a1e011ab69fd48df
msgid "It is imperitive this is understood and equally well applied in planning for storage infrastructure, or that your storage appliance vendor or consultancy partner is trusted in their judgement."
msgstr ""

#: ../../source/deployment-guide/storage.rst:527
# 175a35bacd334cd9b7d21d3bab6e8092
msgid "Shared Storage (NFS)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:529
# a1c45827368e4b55ab093642eed0b199
msgid "Use of the Networked File System (NFS) in and by itself does **not** provide redundancy, although the underlying storage volume might be replicated."
msgstr ""

#: ../../source/deployment-guide/storage.rst:533
# 2e1eac79beee4f76993217b5e7279545
msgid "For a variety of reasons, the use of `NFS is considered harmful`_ and is therefore, and for other reasons,  most definitely not recommended for Kolab Groupware IMAP spool storage, or any other storage related to functional components of Kolab Groupware itself -- IMAP, LDAP, SQL, etc."
msgstr ""

#: ../../source/deployment-guide/storage.rst:538
# 0f36a6f1d9604157888d40ae8e37d786
msgid "Most individual concerns can be addressed separately, and some should or must already be resolved to address other potentially problematic areas of a given infrastructure, regardless of the use of NFS."
msgstr ""

#: ../../source/deployment-guide/storage.rst:542
# e19cfab49cff4dfcb600e1cb47feb31c
msgid "A couple of concerns however only have *workarounds*, not solutions -- such as disabling locking -- and a number of concerns have no solution at all."
msgstr ""

#: ../../source/deployment-guide/storage.rst:546
# a97905981bf14291ae0734fc0d0d1d7f
msgid "One penalty to address is the inability for NFS mounted volumes to cache I/O, known as in-memory buffer caching."
msgstr ""

#: ../../source/deployment-guide/storage.rst:549
# 22692df2474249d3a6632d48e0da3df7
msgid "A technology called `FS Cache`_ can facilitate eliminating round-trip- incurred network-latency, but is still a filesystem-backed solution (for which filesystem the local kernel applies buffer caching), requires yet another daemon, and introduces yet another layer of synchronisity to be maintained -- aside from `other limitations <https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/fscachelimitnfs.html>`_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:555
# 7f57898b3d524c7281559c1276352b92
msgid "An NFS-backed storage volume can still be used for fewer, larger files, such as guest disk images."
msgstr ""

#: ../../source/deployment-guide/storage.rst:558
# 1db578d972334b41b2ae599d56c95142
msgid "That said, it has been confirmed by `Dovecot Oy`_, a company supporting Dovecot, that multiple of their IMAP servers using the same NFS volume for all payload (mailboxes and messages) and **without** locking, is a supported deployment topology, but `Kolab Systems AG`_ does not, at the time of this writing, have real-life experience with an actual production environment of this sort."
msgstr ""

#: ../../source/deployment-guide/storage.rst:566
# bafb0ead008c46d68911d4e3d6a31d18
msgid "Shared Storage (iSCSI or FC LUNs)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:568
# a69c358c1d954deb9c3cc2ef84467d59
msgid "Both iSCSI LUNs and Fiber-Channel LUNs facilitate attaching a networked block storage device as if it were a local disk (creating devices similar to ``/dev/sd{a,b,c,d}`` etc.)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:572
# d2de257111ec49d49ad8874b95b5f084
msgid "Since such a LUN is available over a \"network\" infrastructure, it may be shared between multiple nodes but when it is, nodes need to coordinate their I/O on some other level."
msgstr ""

#: ../../source/deployment-guide/storage.rst:576
# 197e17b6227948f3b4966f0dccbf801c
msgid "With an example case of hypervisors, either `Cluster LVM`_ [#]_ or `GFS`_ [#]_ could be used to protect against corruption of the LUN."
msgstr ""

#: ../../source/deployment-guide/storage.rst:589
# 88cd8146895f48b89150df9736cd17b2
msgid "Availability"
msgstr ""

#: ../../source/deployment-guide/storage.rst:591
# 26de357c3ead4b979df8b9284593f0d7
msgid "Availability of storage too can be achieved via multiple routes. In one of the aforementioned technologies, replicated bricks both available real-time and online, in a parallel read-write capacity, provided high- availability through redundancy (see :ref:`deployment-storage-integrated-storage-protocol-level-replication`)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:597
# 231250ace01f41b5be6c4ec4e586646b
msgid "An existing chunk of storage you might have is likely backed by a level of RAID, with redundancy through mirroring individual disk volumes and/or the inline calculation of parity, and perhaps also some spare disks to replace those that are kicked or fall out of line."
msgstr ""

#: ../../source/deployment-guide/storage.rst:602
# f58ba648319a4985a3783587ba77f746
msgid "Further features might include battery-backed I/O controllers, redundant power supplies connected to different power groups, a further UPS and a diesel generator (you start up once a month, right?)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:606
# 59c7971006074214a0e1fe925ce287da
msgid "The availability features of a data center are beyond the scope of this document, but when we speak of availability with regards to storage, we intend to speak of immediate, instant, online availability with automated failover (such as the RAID array) -- and more prominently, without interruption."
msgstr ""

#: ../../source/deployment-guide/storage.rst:613
# 077f182b42ba42e592c6e9fdb326b04a
msgid "Multipath"
msgstr ""

#: ../../source/deployment-guide/storage.rst:615
# 31c6ebf1861b48fbb1a43243475554d6
msgid "Multipath is an enhancement technique in which multiple paths that are available to the storage can be balanced, shaped and failed over automatically. Imagine the following networking diagram:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:653
# 0725d87394554c3898a9b2b139c58602
msgid "The *null* situation is depicted in the previous wiring diagram. When multipath kicks in, primary vs. secondary paths will be chosen for each individual target (that is unique). However, the system maintains a list of potential paths, and continuously monitors all paths for their viability."
msgstr ""

#: ../../source/deployment-guide/storage.rst:659
# e10ff29417fc4327befa6be0c6d7dd80
msgid "In the example, for *Node* attaching to *iSCSI Target #1* results in up to 4 paths to *iSCSI Target #1* -- *4* paths, not *8*, because the networking of *Switch #1* and *Switch #2* is not considered a path with iSCSI -- *two nodes* and *two send targets each*."
msgstr ""

#: ../../source/deployment-guide/storage.rst:664
# 2e913c8d75864b17b4f6e13dc1da9dc3
msgid "Multipath chooses one path to the available storage:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:703
# 6ec4baf9ba0f484fbae09bea8e1bb6c8
msgid "Should one port, bridge, controller, switch or cable fail, then the I/O can fall back on to any of the remaining available paths."
msgstr ""

#: ../../source/deployment-guide/storage.rst:706
# 2db2c4cdaecf46d6807d75e7f31a49b9
msgid "As per the example, this might mean the following (with *Canister #2* failing):"
msgstr ""

#: ../../source/deployment-guide/storage.rst:749
# b96956db57e141478fec1c7e8bdd19f3
msgid "Performance"
msgstr ""

#: ../../source/deployment-guide/storage.rst:752
# 38bdd5cbd23749e287c608c25eba1171
msgid "Storage Tiering"
msgstr ""

#: ../../source/deployment-guide/storage.rst:754
# be2f42f0dffa490bae49db7e9fb8aae1
msgid "Storage tiering includes the combination of different types of storage or storage volumes with different performance expectations within the infrastructure, so that a larger volume of slower, cheaper storage can be used for items that are not used that much, and/or are not that important for day-to-day operations, while a smaller volume of faster, more expensive storage can be used for items that are frequently accessed and have significant importance to everyday use."
msgstr ""

#: ../../source/deployment-guide/storage.rst:762
# b68da06bb5304d89b27835befb8a18e4
msgid "The Kolab Groupware administrator guide has a section on using :ref:`admin-tweaking-cyrus-imapd-storage-tiering` to tweak Cyrus IMAP performance, to illustrate various opportunities to make optimal use of your storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:767
# f02d4735141c426ea8ca9c27673b6a81
msgid "As a general rule of thumb, you could divide :term:`operating system disks` and :term:`payload disks`; the operating system disk could hold your base installation of a node, including everything in the root (``/``) filesystem, while your payload disk(s) hold the files and directories that contain the system's service(s) payload (such as ``/var/lib/mysql/``, ``/var/spool/imap/``, ``/var/lib/imap/``, ``/var/lib/dirsrv/``, etc.)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:775
# d39d985a19f14860b38399056cfca20a
msgid "Distributing what is and what is not frequently used may be a cumbersome task for administrators. Some storage vendor's appliances offer automated storage tiering, where some disks in the appliance are SSDs, while others are SATA or SAS HDDs, and the appliance itself tiers the storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:781
# f595a375ee474057b2efb28ed67ac733
msgid "A similar solution is available to Linux nodes, through `dm-cache`_, provided they run a recent kernel."
msgstr ""

#: ../../source/deployment-guide/storage.rst:785
# 70218c3eafbf4cf38a97c5c037b355f5
msgid "Disk Buffering"
msgstr ""

#: ../../source/deployment-guide/storage.rst:787
# 9d0680b759314cc6b7af53bd3fc6fadc
msgid "Reading from a disk is considered very, very slow when compared to accessing a node's (real) memory. While dependent on the particular I/O pattern of an application, it is not uncommon at all for an application to read the same part of a disk volume several times during a relatively short period of time."
msgstr ""

#: ../../source/deployment-guide/storage.rst:793
# a99fbb0db1d24d9bb75b12d312997430
msgid "In Kolab Groupware, for example, while a user is logged in, a mail folder's :file:`cyrus.index` is read more frequently than it is written to -- such as when refreshing the folder view, when opening a message in the folder, when replying to a message, etc."
msgstr ""

#: ../../source/deployment-guide/storage.rst:798
# 4fec3a6c0e4547fe9d451900bc314c96
msgid "It is important to appreciate the impact of `memory-based buffer cache`_ for this type of I/O on the overall performance of the environment."
msgstr ""

#: ../../source/deployment-guide/storage.rst:801
# 9968436d46474bfea9e7b0cbb430dc0a
msgid "Should no (local) memory-based buffer cache be available, because for example you are using a network filesystem (NFS, GlusterFS, etc.), then it is extremely important to appreciate the consequences in terms of the performance expectations."
msgstr ""

#: ../../source/deployment-guide/storage.rst:807
# ebcbdd7d801c4b308bf0e9532c341544
msgid "Readahead"
msgstr ""

#: ../../source/deployment-guide/storage.rst:809
# dcfecd68bcbb4bfa920975c6f69b1f96
msgid "Reading ahead is a feature in which -- in a future-predicting, anticipatory fashion -- a chunk of storage is read in addition to the chunk of storage actually being requested."
msgstr ""

#: ../../source/deployment-guide/storage.rst:813
# 34f2e0b3061c47daaa9490b42af7fc6b
msgid "A common application of read-ahead is to record all files accessed during the boot process of a node, such that later boot sequences can read files from disk, and insert them in to the `memory-based buffer cache`_ ahead of software actually issuing the call to read the file. The file's contents can now be reproduced from the faster (real) memory rather then from the slow disk."
msgstr ""

#: ../../source/deployment-guide/storage.rst:820
# 423fb97700644b1c9b254d5c881c23de
msgid "Readahead generally does not matter for small files, unless read operations work on a collective of aggregate message files. It does however matter for attached devices on infrastructural components such as hypervisors, where entire block devices (for the guest) are the files or block devices being read."
msgstr ""

#: ../../source/deployment-guide/storage.rst:826
# 00b5e118c8044e429e35a728a3306dfb
msgid "The ideal setting for readahead depends on a variety of factors and can usually only be established by monitoring an environment and tweaking the setting (followed by some more monitoring)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:839
# 179a6ae2a63a4b23aea28b33e5baf9f0
msgid "Scalability"
msgstr ""

#: ../../source/deployment-guide/storage.rst:841
# 612966b690aa41689cda9ae32f226870
msgid "When originally planning for storage capacity, a few things are to be taken in to account. We'll point these out and address them later in this section."
msgstr ""

#: ../../source/deployment-guide/storage.rst:845
# 7259aed1070546d78ea6973a2a92491c
msgid "Generically speaking, when storage capacity is planned for initially, a certain period of time is used to establish how much storage might be required (for that duration)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:849
# 873ff52b0bee4ceeac54460341c3d576
msgid "However, let's suppose regulatory provisions dictate a period of 10 years of business communications need to be preserved. How does one accurately predict the volume of communications over the next 10 years?"
msgstr ""

#: ../../source/deployment-guide/storage.rst:853
# 01905c34efe44c3cbd4354259fa27a85
msgid "Let's suppose your organization is in flux, expanding or contracting as businesses do at times, or budget cuts and unexpected extra tasks to your organization might incur. Or when the organization takes over or otherwise incorporates another."
msgstr ""

#: ../../source/deployment-guide/storage.rst:858
# f45023c411004b3689c6af1b94408417
msgid "Today's storage coming with a certain price-tag, and tomorrow's with a different one, it can be an interesting exercise to plan for storage to grow organicly as needed, rather than make large investments to provide capacity that may only be used years from today, or not be used at all, or turn out to still not be sufficient."
msgstr ""

#: ../../source/deployment-guide/storage.rst:864
# 5e0e1fa479ae4c8fbf9b895a1c8ee150
msgid "One may also consider planning for the future expansion of the storage solution chosen today, possibly including significant changes in requirements (larger mailboxes)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:869
# 21e1d8b35d014dd2ba330074949bc510
msgid "Data Retention"
msgstr ""

#: ../../source/deployment-guide/storage.rst:871
# d028f3b20995417a98da3a06606d09f3
msgid "Kolab Groupware by default does not delete IMAP spool contents from the filesystem for a period of 69 days."
msgstr ""

#: ../../source/deployment-guide/storage.rst:874
# 7ab1d55f720742379a6df67ff2c337cc
msgid "This means that when a 100 users each have 1 GB of quota, the actual data footprint might grow way beyond 100 GB on disk."
msgstr ""

#: ../../source/deployment-guide/storage.rst:877
# 9cf77134cc054efe929162abcd498875
msgid "Depending on the nature of how you use Kolab Groupware, a reasonable expectation can be formulated and used for calculating the likely amount of disk space used in addition to the content that continues to count towards quota."
msgstr ""

#: ../../source/deployment-guide/storage.rst:882
# 6b9bcf48b7bf4175a1dd9b0d4f96f075
msgid "For example, if a large amount of message traffic ends up in a shared folder that many users read messages from and respond to (such as might be the case for an info@example.org email address), then around triple the amount of traffic per month will continue to be stored on disk, plus what you decide is still current and not deleted by users (the \"live size\")."
msgstr ""

#: ../../source/deployment-guide/storage.rst:890
# 6eda14a32541466f93c6235e90c717dc
msgid "Shared Folders"
msgstr ""

#: ../../source/deployment-guide/storage.rst:892
# e328d9bb3f8e422689ee7e5195b15dc4
msgid "Shared folders (primarily those to which mail is delivered) do not, by default, have any quota on them. They are also not purged by default. As such, they could grow infinitely (until disks run out of space)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:896
# 25ae27e710474b53985e176bd4a0beed
msgid "A busy mailing list used for human communications, such as devel@lists.fedoraproject.org, can be expected to grow to as much as 1 GB of data foot print on disk over a period of 3 years -- at a message rate of < ~100 a day and without purging."
msgstr ""

#: ../../source/deployment-guide/storage.rst:901
# 082b4c4716de40d4986e12d3f01ddb06
msgid "A mailing list with automated messages generated from applications, such as bugs-list@kde.org, which is notified of all ticket changes for KDE's upstream Bugzilla, can be expected to grow to up to 3.5 GB over the same period -- at a message rate of ~300 per day and without purging."
msgstr ""

#: ../../source/deployment-guide/storage.rst:907
# dae88d2adc4a444584a09e57f47bde74
msgid "User's Groupware Folders"
msgstr ""

#: ../../source/deployment-guide/storage.rst:909
# 10799c1dc7ce4276a8cfe77d9cc134ee
msgid "Users tend not to clean up their calendars, removing old appointments that have no bearing on today's views/operations any longer. Kolab Groupware does not (yet) provide means to purge these items. They do however count towards a user's quota."
msgstr ""

#: ../../source/deployment-guide/storage.rst:917
# 48c1ae5745f444de9a1e86a6224df215
msgid "Capacity"
msgstr ""

#: ../../source/deployment-guide/storage.rst:919
# a3d65bae535247a7861e5010317ffbf9
msgid "Regardless of the volume of storage in total, this section relates to the volume of storage allocated to any one singular specific purpose in Kolab Groupware, and capacity planning in light of that (not the layer providing the storage)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:924
# a79630536363410a9f277995276183b5
msgid "Archiving and e-Discovery notwithstanding, the largest chunks of data volume you are going to find in Kolab Groupware are the live IMAP spools."
msgstr ""

#: ../../source/deployment-guide/storage.rst:928
# 70a5b66f053743a7bb3df3bce7698fd2
msgid "Let each individual IMAP spool be considered a volume, or part of a volume if you feel inclined to share volumes across Cyrus IMAP backend instances. Regardless, you need a filesystem **somewhere** (even if the bricks building the volume are distributed) -- the recommended restrictions you should put forth to the individual chunks of storage lay therein."
msgstr ""

#: ../../source/deployment-guide/storage.rst:935
# f15ea3e5fea447ee831ecffe7be1fc45
msgid "Saturating the argument to make a point, imagine, if you will, a million users with one gigabyte of data each. Just the original, minimal data footprint is now around and about one petabyte."
msgstr ""

#: ../../source/deployment-guide/storage.rst:939
# fc11fe8653fd41d3befa5b5a992c5ebe
msgid "Performing a filesystem check (:command:`fsck.ext4` comes to mind) on a single one petabyte volume will be prohibitively expensive simply considering the duration of the command to complete execution, let alone successful execution, for your **million** users will not have access to their data while the command has not finished -- again, let alone it finished successfully."
msgstr ""

#: ../../source/deployment-guide/storage.rst:946
# d6eb70f6cf8b48e9b8f54860e73902bf
msgid "**Solely therefore** would you require a second copy of the groupware payload, now establishing a minimal data footprint to **two** petabyte."
msgstr ""

#: ../../source/deployment-guide/storage.rst:951
# cb4ab77da03844c39395085718ea50f7
msgid "Also note that the two replicas of one petabyte would, if the replication occurs at the storage volume level, run the risk of corrupting both replicas' filesystems."
msgstr ""

#: ../../source/deployment-guide/storage.rst:955
# e9aabd5109844f12a4eba69af59c8c72
msgid "Your requirements for data redundancy aside, filesystem checks needing to be performed at least regularly [#]_, if not for the level of likelihood they need to happen because actual recovery is required, should be restricted to a volume of data that enables the check to complete in a timely fashion, and possibly (when no data redundancy is implemented) even within a timeframe you feel comfortable you can hold off your users/customers while they have no access to their data [#]_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:963
# 572006c3360f4d68a2e554ba0c974121
msgid "For filesystem checks to need to happen regularly, is not to say that such filesystem checks require the node to be taken offline. Should you use Logical Volume Management (LVM) for example, and not allocate 100% of the volume group to the logical volume that holds the IMAP spool, than intermediate filesystem checks can be executed on a snapshot of said logical volume instead, and while the node remains online, to give you a generic impression of the filesystem's health. Given this information, you can schedule a service window should you feel the need to check the actual filesystem."
msgstr ""

#: ../../source/deployment-guide/storage.rst:973
# 28fe53925c024a80bcaf7f6c2f99e275
msgid "A good article on filesystems, the corruption of data and their causes and mitigation strategies has been written up by `LWN`_, `The 2006 Linux Filesystem Workshop`_. This article also explains what it is a filesystem check actually does, and why it is usually configured to be ran after either a certain amount of delay or number of mounts."
msgstr ""

#: ../../source/deployment-guide/storage.rst:997
# b74ee81947fb4bbb9e0c2aad25eb21eb
msgid "Cost"
msgstr ""

#: ../../source/deployment-guide/storage.rst:1000
# 9bf0f792804c4a8dabe6ba3150aa2a78
msgid "Footnotes"
msgstr ""

#: ../../source/deployment-guide/storage.rst:1003
# 4d983377c8784559ba71572c6bd8c6fe
msgid "Applications may also operate on data not stored on disk at all, which is another common avenue potentially resulting in loss of data -- or *corruption*, which is merely a type of data-loss."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1009
# 29ad029e511b4cf5b43fbc2d220e6be3
msgid "With read operations, the other node(s) must be blocked from writing, and with write operations, the other node(s) must be blocked from reading and writing."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1015
# 47308fc9a06c4f9c883fc327b9461565
msgid "When using ClusterLVM, you would use logical volumes as disks for your guests."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1020
# a57f73f8d345494cba44ecf28f5d479e
msgid "When using GFS, you would mount the GFS filesystem partition on each hypervisor and use disk image files."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1025
# 1e632acc7fc748d08ce1cee7da308473
msgid "NFS is a set of protocols operating on the layers 5, 6 and 7 of the `OSI model for networking`_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1030
# 4575ffd8d6c944deafcfcb62f10651ba
msgid "Execute filesystem checks regularly to increase your level of confidence, that should emergency repairs need to be performed, you are able to recover swiftly."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1034
# d79d7a35db8e4460859f2085a76e0dc7
msgid "The :term:`MTBF` of a stable filesystem has most often been subject to the failure of the underlying disk, with the filesystem unable to recover (in time) from the underlying disk failing (partly)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1040
# d8a0de1438c240d9be928b9e92801846
msgid "Online filesystem checks"
msgstr ""

