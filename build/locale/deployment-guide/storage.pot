# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2016, Kolab Systems AG
# This file is distributed under the same license as the Kolab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kolab 16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-25 17:12+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/deployment-guide/storage.rst:88
# 8d17bc3cf4364820adc68f9e1884f2b5
msgid "2"
msgstr ""

#: ../../source/deployment-guide/storage.rst:94
# efc8b3c2e118424a8ba4f938021543a5
msgid "Storage Considerations for Kolab"
msgstr ""

#: ../../source/deployment-guide/storage.rst:96
# 03ca53a3a827402f952aa47e2517ef09
msgid "Storage considerations are a complex matter as the various options provide or restrict one's ability to adjust the necessary parameters as the need arises. It is foremost a challenge to clearly articulate and prioritize the criteria for storage, and map the theory on to a practical implementation design."
msgstr ""

#: ../../source/deployment-guide/storage.rst:102
# 43c6a99a32b54288be41869bfe389be1
msgid "This article intends to provide information and outline details, and sometimes opinions and recommendations, but it is not a guide to providing you with the storage solution that you want or require."
msgstr ""

#: ../../source/deployment-guide/storage.rst:106
# eab5152aecd84e8c916729432ef6a3f8
msgid "Generally, the most important considerations for storage include;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:108
# b4d45b6647e04e348ea2bfa7cb324a13
msgid ":ref:`deployment-storage-redundancy`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:110
# 4b46763c133b41c5a2d096ba91b7888e
msgid "because nothing is as humiliating as losing all your data."
msgstr ""

#: ../../source/deployment-guide/storage.rst:112
# c6b1555933a64d3dae345236e427cf8b
msgid ":ref:`deployment-storage-availability`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:114
# dbe6a1b884a8406899a56f5cb05c7183
msgid "because nothing is more stressful than none of your data being available."
msgstr ""

#: ../../source/deployment-guide/storage.rst:117
# 3e72236eb44c4c3da3c2a4464f3f0bab
msgid ":ref:`deployment-storage-performance`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:119
# 71fccd00510048078357c9bcdf53b714
msgid "because nothing is as annoying as waiting, followed by some more waiting."
msgstr ""

#: ../../source/deployment-guide/storage.rst:122
# dd2a94c043834003a780bc7ae40e7573
msgid ":ref:`deployment-storage-scalability`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:124
# 6b3a579ca5654df1a8a2c29cf8648caa
msgid "because ``-ENOSPC`` is good only when it applies to your stomach."
msgstr ""

#: ../../source/deployment-guide/storage.rst:126
# f33200566c39455b835e1d62632fc040
msgid ":ref:`deployment-storage-capacity`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:128
# 52278cbd00dc4346849d44fb1700a173
msgid "because your data must be available, backed up and archived."
msgstr ""

#: ../../source/deployment-guide/storage.rst:130
# 3d941b952a934c4982b63d20a04e55e6
msgid ":ref:`deployment-storage-cost`,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:132
# e08b0c693951495a9d5ba6a4f837564b
msgid "because you can't buy a beer or feed a family with an empty wallet."
msgstr ""

#: ../../source/deployment-guide/storage.rst:134
# 0a0bd0c07e5a4626a9bb200b372bd52e
msgid "Storage is not a part of Kolab Groupware, in that Kolab does not ship a particular storage solution as part of the product, and it has no particular requirements for storage either."
msgstr ""

#: ../../source/deployment-guide/storage.rst:138
# a6303419f61346b5bfb00f0263fbea34
msgid "As such, your SAN, NAS, local disk, local array of disks or network share or even the flash drive of a Raspberry Pi could be used, although the following considerations are important:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:142
# fb4149a184b941d7bf400e7cb37909b0
msgid "The Kolab Groupware IMAP spool is I/O intensive (large volumes of data are read and get written)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:145
# 48ef3aa303864078b9827865df69506c
msgid "The IMAP spool consists of many small files."
msgstr ""

#: ../../source/deployment-guide/storage.rst:147
# 9a8ae6558ba0454fb08eb53551acd29d
msgid "As such, we recommend you take into account;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:149
# de196339cf044a6da202e8a6107f8d9c
msgid "The available bandwidth between the IMAP server and the storage provider, if at all on the network,"
msgstr ""

#: ../../source/deployment-guide/storage.rst:152
# b33e6d1ab5b546bc800c3e186721c943
msgid "The (network) protocol overhead, if any, should file-level read and/or write locking be required or implied."
msgstr ""

#: ../../source/deployment-guide/storage.rst:155
# c5c7fe18c85b4e26b52fadf1b323117e
msgid "Atomic file operations (TODO: Explain this)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:157
# 491c5ea7643f4e3aaecf9e2f1ea836c7
msgid "Parallel access (such as shared mailboxes or multi-client attendance) -- TODO: Explain this, too."
msgstr ""

#: ../../source/deployment-guide/storage.rst:161
# 00142fd9fa534193bb5768f7c1157b1f
msgid "General Notes on Storage"
msgstr ""

#: ../../source/deployment-guide/storage.rst:163
# 42f1b67a76724ce29cc999a50cba9208
msgid "The aforementioned considerations :ref:`deployment-storage-redundancy`, :ref:`deployment-storage-availability`, :ref:`deployment-storage-performance`, :ref:`deployment-storage-scalability`, :ref:`deployment-storage-capacity` and :ref:`deployment-storage-cost` are not all of them equally important -- not to all organizations, and not to all requirements when the priorities are set out against the implied cost of the ideal solution."
msgstr ""

#: ../../source/deployment-guide/storage.rst:171
# 3110aa5a375d44cf8cc41b205b30ca7c
msgid "They are also not mutually exclusive in that, for example, redundancy may partly address some of the availability concerns -- depending on the exact nature of the final deployment of course, and backup/recovery capabilities in turn may parly address redundancy requirements."
msgstr ""

#: ../../source/deployment-guide/storage.rst:176
# a06b80261d054ce0907703aa9a7e4167
msgid "What is deemed acceptable is another culprit -- often operational cost or familiarity of staff with a particular storage solution may get in the way of an otherwise appropriate storage solution."
msgstr ""

#: ../../source/deployment-guide/storage.rst:180
# 7051be801daa47ff8589053adc337d19
msgid "We believe that provided a sufficient amount of accurate information, however, you are able to make an informed choice, and that an informed choice is always better than an ill-informed one."
msgstr ""

#: ../../source/deployment-guide/storage.rst:187
# 1d4e62cb15314f0da92e9399caa6fe8d
msgid "Redundancy"
msgstr ""

#: ../../source/deployment-guide/storage.rst:189
# 144e02bb815145adb719de94502ba1c4
msgid "Storage redundancy is achieved through replication of data. It is important to understand that, as a matter of design principle, redundancy does not in and by itself provide increased availability."
msgstr ""

#: ../../source/deployment-guide/storage.rst:193
# 78be4ff0a07940858951ce0517f9564d
msgid "How redundancy could increase availability depends on the exact implementation, and the various options for practical implementation each have their own set of implications for cases of failure and the need to, under certain circumstances, failover and/or recover."
msgstr ""

#: ../../source/deployment-guide/storage.rst:198
# d91b07154e5a4e648f2806e9c7a03f57
msgid "How redundancy is achieved in an \"acceptable\" manner is another subject open to interpretation; it is sometimes deemed acceptable to create backups daily, and therefore potentially accept the loss of up to one day's worth of information from live spools -- which may or may not be recoverable through different means. More commonly however is to not settle for less than real-time replication of data."
msgstr ""

#: ../../source/deployment-guide/storage.rst:205
# 5effd83e95544f45ae309db3bb3db809
msgid "While storage ultimately amounts to disks, it is important to understand that a number of (virtual) devices, channels, links and interfaces exist between an application operating data on disk [#]_, and the physical sectors and blocks of storage on that disk. In a way, this number of layers can be compared with the `OSI model for networking`_ -- but it is not the same at all."
msgstr ""

#: ../../source/deployment-guide/storage.rst:212
# 5faa2d1bcd4a499f87504bbc313540bf
msgid "This section addresses the most commonly used levels at which replication can be applied."
msgstr ""

#: ../../source/deployment-guide/storage.rst:216
# f4e595ed84c5434b9ff581c59d619809
msgid "Storage Volume Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:218
# b80a44d16f4d49458a6808a9670174a8
msgid "When using the term :term:`storage volume level replication` we mean to indicate the replication of :term:`disk volumes` as a whole. A simplistic replication scenario of a data disk between two nodes could look as follows:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:260
# 6e4059d8263f48fca9ee236430bfc61f
msgid "For a fully detailed picture of the internal structures, please see the `DRBD`_ website, the canonical experts on this level of replication."
msgstr ""

#: ../../source/deployment-guide/storage.rst:263
# 222a907d0f6e4d7aa66055c1787fcb5d
msgid "At the time of this writing, the DRBD website has an excellent diagram on its front page, explaining why one master is active, and slaves are not:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:270
# 2cdb79e972124dfb8029e3420bcb4939
msgid "As illustrated, normally, storage-level replication occurs in such fashion, that it can be compared with a distributed version of a RAID-1 array. This incurs limitations that need to be evaluated carefully."
msgstr ""

#: ../../source/deployment-guide/storage.rst:274
# 82a1cc2b951c44a9a472a448e2e52afd
msgid "In a hardware RAID-1 array, storage is physically constrained to a single node, and pairs of replicated disks are treated as one. In a software RAID-1 array, it is the operating system's software RAID driver that can (must) address the individual disks, but makes the array appear as a single disk to all higher-level software. Here too, the disks are physically constrained to one physical node."
msgstr ""

#: ../../source/deployment-guide/storage.rst:281
# 6597bf7c94ab4799ad7f6b33f3d20da2
msgid "In both cases, a *single point of control* exists with full and exclusive access to the physical disk device(s), namely the interface for *all higher-level software* to interact with the storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:285
# 545d937e77cf4b98a0274d6ce2ec357c
msgid "This is the underlying cause of the storage-level replication conundrum."
msgstr ""

#: ../../source/deployment-guide/storage.rst:287
# 608c403ea984475eaca244d58f1cf9de
msgid "To illustrate the conundrum, we use a software RAID-1 array. The individual disk volumes that make up the RAID-1 array are not hidden from the rest of the operating system, but more importantly, direct access to the underlying device is not prohibited. With an example pair ``sda2`` and ``sdb2``, nothing prevents you from executing ``mkfs.ext4`` on ``/dev/sdb2`` thereby corrupting the array -- other than perhaps not having the necessary administrative privileges."
msgstr ""

#: ../../source/deployment-guide/storage.rst:295
# 6dd702900f004afcab0fa7fe8be438fc
msgid "To further illustrate, position one disk in the RAID-1 array on the other side of a network (such as is a `DRBD`_ topology, as illustrated). Since now two nodes participate in nurturing the mirrored volume, two points of control exist -- each node controls the access to its local disk device(s)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:301
# 7950394e0a07493481ffadfbf4d71b12
msgid "Participating nodes are **required** to successfully coordinate their I/O with one another, which on the level of entire storage volumes is a very impractical effort with high latency and enormous overhead, should more than one node be allowed, to access the replicated device [#]_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:306
# 23165fdc0e43414591214df3c0895e85
msgid "It is therefore understood that, using storage level replication;"
msgstr ""

#: ../../source/deployment-guide/storage.rst:308
# e67c19ad7101419f9973be84e747a9ad
msgid "Only one side of the mirrored volume can be active (master), and the other side must remain passive (slave),"
msgstr ""

#: ../../source/deployment-guide/storage.rst:311
# 460c6661bdab4ecaa53db41f440f6d01
msgid "The active and passive nodes therefore have a cluster solution implemented to manage application's failover and management of the change in replication topology (a slave becomes the I/O master, the former master becomes the replication slave, and other slaves, if any, learn about the new master to replicate from),"
msgstr ""

#: ../../source/deployment-guide/storage.rst:317
# ee5aacb90cbd4a02b80b4213ad860c3d
msgid "Failover implementations include the STONITH principle, ensuring no two nodes in parallel perform I/O on the same volume at any given time."
msgstr ""

#: ../../source/deployment-guide/storage.rst:323
# e8e24136affb4d4caaf99a4ce6f6879f
msgid "Storage-level replication does not protect against filesystem or payload corruption -- the replication happily mirrors the \"faulty\" bits as it is completely agnostic to the bits' relevance."
msgstr ""

#: ../../source/deployment-guide/storage.rst:329
# 0fed398cd86c41659dee147d70a97039
msgid "For the reasons outlined in this section, storage volume level replication has only a limited number of Kolab Groupware deployment scenarios for which it would be recommended -- such as *Disaster Recovery Failover*."
msgstr ""

#: ../../source/deployment-guide/storage.rst:337
# ee3abd60202e4ea7a07e2fc6df835ad8
msgid "Integrated Storage Protocol Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:339
# ec5e71d111b6463e8baec973d842cf6b
msgid "Integrated storage protocol level replication is a different approach to making storage volumes redundant, applying the replication on a different level."
msgstr ""

#: ../../source/deployment-guide/storage.rst:343
# ba93314676ac4e57b13ba03044906a79
msgid "Integrated storage protocol level replication isn't necessarily limited to replication for the purposes of redundancy only, as it may already include parallel access controls, distribution across multiple storage nodes (each providing a part of the total storage volume available), enabling the use of cheap commodity hardware to provide the individual parts (called \"bricks\") that make up the larger volume."
msgstr ""

#: ../../source/deployment-guide/storage.rst:350
# f2ce6fb921ca42afa57c29f910273e46
msgid "Additional features may include the use of a geographically oriented set of parameters for the calculation and assignment of replicated chunks of data (ie. \"brick replication topology\")."
msgstr ""

#: ../../source/deployment-guide/storage.rst:387
# 871344f5567e46f884a2f00c96da7aad
msgid "Current implementations of this type of technology include `GlusterFS`_ and `Ceph`_. Put way too simplistically, both technologies apply very smart ways of storing individual objects, sometimes with additional facilities for certain object types. How they work exactly is far beyond the scope of this document."
msgstr ""

#: ../../source/deployment-guide/storage.rst:393
# 1d0d5036f1444747aec08f4cd1101fce
msgid "Both technologies however are considered more efficient for fewer larger objects, than they are for more smaller objects. Both storage solutions also tend to be more efficient at addressing individual objects directly, rather than hierarchies of objects (for listing)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:398
# 8618504b602646408c26bc28eaea9763
msgid "This is meant to indicate that while both solutions scale up to millions of objects, they facilitate a particular **I/O pattern** better than the I/O pattern typically associated with a large volume of messages in IMAP spools. More frequent and very short-lived I/O against individual objects in a filesystem mounted directly causes a significant amount of overhead in negotiating the access to the objects across the storage cluster."
msgstr ""

#: ../../source/deployment-guide/storage.rst:406
# bddff57fdc48461ca2ad041b151c64d6
msgid "Both technologies are perfectly suitable for large clusters with relatively small filesystems (see `Filesystems: Smaller is Better`_) if they are mounted directly from the storage clients. They are particularly feasible if not too many parallel write operations to individual objects (files) are likely to occur (think, for example, of web application servers and (asset-)caching proxies)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:413
# a61221a93b2347d4a4037a1e10caa046
msgid "Alternatively, fewer larger objects could be stored -- such as disk images for a virtualization environment. The I/O patterns internal to the virtual machine would remain the same, but the I/O pattern of the storage client (the hypervisor) is the equivalent of a single lock-and-open when the virtual machine starts."
msgstr ""

#: ../../source/deployment-guide/storage.rst:419
# 79c374848e9d42dc8cc046824d904245
msgid "It is therefore understood that, especially in deployments of a larger scale, one should not mount a GlusterFS or CephFS filesystem directly from within an IMAP server, as an individual IMAP mail spool consists of many very small objects each individually addressed frequently, and in short-lived I/O operations, and consider the use of these distributed filesystems for a different level of object storage, such as disk images for a virtualization environment:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:482
# a3b1376589724c15b021aae4a2a9c201
msgid "In this illustration, *Hypervisor #1* and *Hypervisor #2* are storage clients, and replicated bricks hold the disk images of each guest."
msgstr ""

#: ../../source/deployment-guide/storage.rst:485
# b21a7118f73146919b282ed45e34e220
msgid "Each hypervisor can, in parallel, perform I/O against each individual disk image, allowing (for example) both *Hypervisor #1* and *Hypervisor #2* to run guests with disk images for which *Brick #3* has been selected as the authoritative copy."
msgstr ""

#: ../../source/deployment-guide/storage.rst:493
# 9ffc1b948bce4796a5d9e6f690c05c7b
msgid "Application Level Replication"
msgstr ""

#: ../../source/deployment-guide/storage.rst:495
# ded07d7c4e0f4b1d92cff824883285e0
msgid "Yet another means to provide redundancy of data is to use application- level replication where available."
msgstr ""

#: ../../source/deployment-guide/storage.rst:498
# b9b2d96d16384ee096657f66288d2db3
msgid "Famous examples include database server replication, where one or more MySQL masters are used for write operations, and one or more MySQL slaves are used for read operations, and LDAP replication."
msgstr ""

#: ../../source/deployment-guide/storage.rst:502
# b19ab3ae560b471b9e63f95290452643
msgid "Cyrus IMAP can also replicate its mail spools to other systems, such that multiple backends hold the payload served to your users."
msgstr ""

#: ../../source/deployment-guide/storage.rst:506
# 481b28c690094f7283eec0e66c378937
msgid "Shared Storage (Generic)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:508
# 74f7ce93e4ea49e0af7e6a1eae41e88e
msgid "Contrary to popular belief, all shared storage -- NFS, iSCSI and FC alike -- are **not** storage devices. They are *network protocols* for which the application just so happens to be storage -- with perhaps the exception to the rule being Fiber-Channel not strictly cohering to the `OSI model for networking`_, although its own 5-layer model equates."
msgstr ""

#: ../../source/deployment-guide/storage.rst:514
# 6a2f2f06405c4b7f9e0ab280ff5333a0
msgid "iSCSI and Fiber-Channel LUNs however are *mapped* to storage devices by your favorite operating system's drivers for each technology, or possibly by a hardware device (an :term:`HBA`, or in iSCSI, an *initiator*)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:519
# e0f8c0fdde8b48e5b40ca92fc858492c
msgid "As such, use of these network protocols for which the purpose just so happens to be storage does **not** provide redundancy."
msgstr ""

#: ../../source/deployment-guide/storage.rst:522
# 9d623ff5d01b460f9ce9283415d710e5
msgid "It is imperitive this is understood and equally well applied in planning for storage infrastructure, or that your storage appliance vendor or consultancy partner is trusted in their judgement."
msgstr ""

#: ../../source/deployment-guide/storage.rst:527
# 9e006510ad95403b877e8d7738079e31
msgid "Shared Storage (NFS)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:529
# 45112dcdfeb74fe8822cd000f59f2cdd
msgid "Use of the Networked File System (NFS) in and by itself does **not** provide redundancy, although the underlying storage volume might be replicated."
msgstr ""

#: ../../source/deployment-guide/storage.rst:533
# ce5022fae1904e979a79a748989587e0
msgid "For a variety of reasons, the use of `NFS is considered harmful`_ and is therefore, and for other reasons,  most definitely not recommended for Kolab Groupware IMAP spool storage, or any other storage related to functional components of Kolab Groupware itself -- IMAP, LDAP, SQL, etc."
msgstr ""

#: ../../source/deployment-guide/storage.rst:538
# 371b662b313847b8b45b9ea2411bd511
msgid "Most individual concerns can be addressed separately, and some should or must already be resolved to address other potentially problematic areas of a given infrastructure, regardless of the use of NFS."
msgstr ""

#: ../../source/deployment-guide/storage.rst:542
# e822c195fae64b2fa06f0d950f3c47d6
msgid "A couple of concerns however only have *workarounds*, not solutions -- such as disabling locking -- and a number of concerns have no solution at all."
msgstr ""

#: ../../source/deployment-guide/storage.rst:546
# afa69d53d6f145169db2efdd83924562
msgid "One penalty to address is the inability for NFS mounted volumes to cache I/O, known as in-memory buffer caching."
msgstr ""

#: ../../source/deployment-guide/storage.rst:549
# 65541d8f71014f738916cb6bbaee4211
msgid "A technology called `FS Cache`_ can facilitate eliminating round-trip- incurred network-latency, but is still a filesystem-backed solution (for which filesystem the local kernel applies buffer caching), requires yet another daemon, and introduces yet another layer of synchronisity to be maintained -- aside from `other limitations <https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/fscachelimitnfs.html>`_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:555
# 888156bdb3c74847a3527d4424b484a6
msgid "An NFS-backed storage volume can still be used for fewer, larger files, such as guest disk images."
msgstr ""

#: ../../source/deployment-guide/storage.rst:558
# 63662dd5ae28476fbd67c9596b614f89
msgid "That said, it has been confirmed by `Dovecot Oy`_, a company supporting Dovecot, that multiple of their IMAP servers using the same NFS volume for all payload (mailboxes and messages) and **without** locking, is a supported deployment topology, but `Kolab Systems AG`_ does not, at the time of this writing, have real-life experience with an actual production environment of this sort."
msgstr ""

#: ../../source/deployment-guide/storage.rst:566
# f4732ee526504ee59c337110ebed1086
msgid "Shared Storage (iSCSI or FC LUNs)"
msgstr ""

#: ../../source/deployment-guide/storage.rst:568
# 44dd127793824c7e8bd80d1724eeddca
msgid "Both iSCSI LUNs and Fiber-Channel LUNs facilitate attaching a networked block storage device as if it were a local disk (creating devices similar to ``/dev/sd{a,b,c,d}`` etc.)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:572
# 5e15a759870841eab16158a3197f1985
msgid "Since such a LUN is available over a \"network\" infrastructure, it may be shared between multiple nodes but when it is, nodes need to coordinate their I/O on some other level."
msgstr ""

#: ../../source/deployment-guide/storage.rst:576
# 29f0b8436aa846dfbcbe4deac69322b4
msgid "With an example case of hypervisors, either `Cluster LVM`_ [#]_ or `GFS`_ [#]_ could be used to protect against corruption of the LUN."
msgstr ""

#: ../../source/deployment-guide/storage.rst:589
# 046d5af757cc417d99691bd9a419f1f8
msgid "Availability"
msgstr ""

#: ../../source/deployment-guide/storage.rst:591
# 2037e91225c84ca0a1f7a39198f61842
msgid "Availability of storage too can be achieved via multiple routes. In one of the aforementioned technologies, replicated bricks both available real-time and online, in a parallel read-write capacity, provided high- availability through redundancy (see :ref:`deployment-storage-integrated-storage-protocol-level-replication`)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:597
# 68f6a7e5defc4574a1a29dfbe058cb6c
msgid "An existing chunk of storage you might have is likely backed by a level of RAID, with redundancy through mirroring individual disk volumes and/or the inline calculation of parity, and perhaps also some spare disks to replace those that are kicked or fall out of line."
msgstr ""

#: ../../source/deployment-guide/storage.rst:602
# 185a12395c1e4c9385cc47a99af55f0a
msgid "Further features might include battery-backed I/O controllers, redundant power supplies connected to different power groups, a further UPS and a diesel generator (you start up once a month, right?)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:606
# d956dcd2b0e94e2f9ece670efb896098
msgid "The availability features of a data center are beyond the scope of this document, but when we speak of availability with regards to storage, we intend to speak of immediate, instant, online availability with automated failover (such as the RAID array) -- and more prominently, without interruption."
msgstr ""

#: ../../source/deployment-guide/storage.rst:613
# ecb40be072794c629448a3864b37f87d
msgid "Multipath"
msgstr ""

#: ../../source/deployment-guide/storage.rst:615
# be963e4cceb24d94a3b053538c2908ed
msgid "Multipath is an enhancement technique in which multiple paths that are available to the storage can be balanced, shaped and failed over automatically. Imagine the following networking diagram:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:653
# b9255a833b6a49c7932a0d5ed1337349
msgid "The *null* situation is depicted in the previous wiring diagram. When multipath kicks in, primary vs. secondary paths will be chosen for each individual target (that is unique). However, the system maintains a list of potential paths, and continuously monitors all paths for their viability."
msgstr ""

#: ../../source/deployment-guide/storage.rst:659
# 7eea1e467e7f4a7f8dcb4f71e2453a23
msgid "In the example, for *Node* attaching to *iSCSI Target #1* results in up to 4 paths to *iSCSI Target #1* -- *4* paths, not *8*, because the networking of *Switch #1* and *Switch #2* is not considered a path with iSCSI -- *two nodes* and *two send targets each*."
msgstr ""

#: ../../source/deployment-guide/storage.rst:664
# 02debeeefb7344f485ab68b783a85a21
msgid "Multipath chooses one path to the available storage:"
msgstr ""

#: ../../source/deployment-guide/storage.rst:703
# 0cb9ee29243f45a886a5d8919e4f283f
msgid "Should one port, bridge, controller, switch or cable fail, then the I/O can fall back on to any of the remaining available paths."
msgstr ""

#: ../../source/deployment-guide/storage.rst:706
# da455907e6c74e31a20346285f95c320
msgid "As per the example, this might mean the following (with *Canister #2* failing):"
msgstr ""

#: ../../source/deployment-guide/storage.rst:749
# 3740c8ae203d43be9643a3a0c028ace0
msgid "Performance"
msgstr ""

#: ../../source/deployment-guide/storage.rst:752
# 99622f3a672e430a85f3f0bc99f2177c
msgid "Storage Tiering"
msgstr ""

#: ../../source/deployment-guide/storage.rst:754
# ab3961df3fe3456aad4e53a36cc11677
msgid "Storage tiering includes the combination of different types of storage or storage volumes with different performance expectations within the infrastructure, so that a larger volume of slower, cheaper storage can be used for items that are not used that much, and/or are not that important for day-to-day operations, while a smaller volume of faster, more expensive storage can be used for items that are frequently accessed and have significant importance to everyday use."
msgstr ""

#: ../../source/deployment-guide/storage.rst:762
# 61e068f9549a46e29535841c277d335f
msgid "The Kolab Groupware administrator guide has a section on using :ref:`admin-tweaking-cyrus-imapd-storage-tiering` to tweak Cyrus IMAP performance, to illustrate various opportunities to make optimal use of your storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:767
# 12f667ed694f4ed9a99f059c02b04e70
msgid "As a general rule of thumb, you could divide :term:`operating system disks` and :term:`payload disks`; the operating system disk could hold your base installation of a node, including everything in the root (``/``) filesystem, while your payload disk(s) hold the files and directories that contain the system's service(s) payload (such as ``/var/lib/mysql/``, ``/var/spool/imap/``, ``/var/lib/imap/``, ``/var/lib/dirsrv/``, etc.)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:775
# d0b5ac1175d44f0bb4542a6f79342a3c
msgid "Distributing what is and what is not frequently used may be a cumbersome task for administrators. Some storage vendor's appliances offer automated storage tiering, where some disks in the appliance are SSDs, while others are SATA or SAS HDDs, and the appliance itself tiers the storage."
msgstr ""

#: ../../source/deployment-guide/storage.rst:781
# 5a67d1530e50402d922608f1860f5ddc
msgid "A similar solution is available to Linux nodes, through `dm-cache`_, provided they run a recent kernel."
msgstr ""

#: ../../source/deployment-guide/storage.rst:785
# c599a1b864094e01b584f0942f202918
msgid "Disk Buffering"
msgstr ""

#: ../../source/deployment-guide/storage.rst:787
# 8216ddcd3859467d9b8691f6bdc48161
msgid "Reading from a disk is considered very, very slow when compared to accessing a node's (real) memory. While dependent on the particular I/O pattern of an application, it is not uncommon at all for an application to read the same part of a disk volume several times during a relatively short period of time."
msgstr ""

#: ../../source/deployment-guide/storage.rst:793
# f09dbe57ff1e4a44b13bfb9009ad33e4
msgid "In Kolab Groupware, for example, while a user is logged in, a mail folder's :file:`cyrus.index` is read more frequently than it is written to -- such as when refreshing the folder view, when opening a message in the folder, when replying to a message, etc."
msgstr ""

#: ../../source/deployment-guide/storage.rst:798
# 7f34919aebf0490fad0ced47915af27d
msgid "It is important to appreciate the impact of `memory-based buffer cache`_ for this type of I/O on the overall performance of the environment."
msgstr ""

#: ../../source/deployment-guide/storage.rst:801
# d7709d89a44b48c5bb0ff053af17b265
msgid "Should no (local) memory-based buffer cache be available, because for example you are using a network filesystem (NFS, GlusterFS, etc.), then it is extremely important to appreciate the consequences in terms of the performance expectations."
msgstr ""

#: ../../source/deployment-guide/storage.rst:807
# db192472fbaf478398c66b3a89b233cb
msgid "Readahead"
msgstr ""

#: ../../source/deployment-guide/storage.rst:809
# 893bf298f6ff4a7dbc5803c7932c431c
msgid "Reading ahead is a feature in which -- in a future-predicting, anticipatory fashion -- a chunk of storage is read in addition to the chunk of storage actually being requested."
msgstr ""

#: ../../source/deployment-guide/storage.rst:813
# 7d71600094d74806a7b12adc387fb6fa
msgid "A common application of read-ahead is to record all files accessed during the boot process of a node, such that later boot sequences can read files from disk, and insert them in to the `memory-based buffer cache`_ ahead of software actually issuing the call to read the file. The file's contents can now be reproduced from the faster (real) memory rather then from the slow disk."
msgstr ""

#: ../../source/deployment-guide/storage.rst:820
# 3559c4da409149adb0683b4e8c1b8539
msgid "Readahead generally does not matter for small files, unless read operations work on a collective of aggregate message files. It does however matter for attached devices on infrastructural components such as hypervisors, where entire block devices (for the guest) are the files or block devices being read."
msgstr ""

#: ../../source/deployment-guide/storage.rst:826
# 871527cc365f442986d0ec41ee725b68
msgid "The ideal setting for readahead depends on a variety of factors and can usually only be established by monitoring an environment and tweaking the setting (followed by some more monitoring)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:839
# e7e41ca04e0e4900a3038d234c475b22
msgid "Scalability"
msgstr ""

#: ../../source/deployment-guide/storage.rst:841
# 04b131dd6ce24ca5975d4b4e6886fec8
msgid "When originally planning for storage capacity, a few things are to be taken in to account. We'll point these out and address them later in this section."
msgstr ""

#: ../../source/deployment-guide/storage.rst:845
# 1199237bb41f4afab8e7f5b86d9b4ad3
msgid "Generically speaking, when storage capacity is planned for initially, a certain period of time is used to establish how much storage might be required (for that duration)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:849
# dc58c6c6c4fa4cf8a0de9296223dd102
msgid "However, let's suppose regulatory provisions dictate a period of 10 years of business communications need to be preserved. How does one accurately predict the volume of communications over the next 10 years?"
msgstr ""

#: ../../source/deployment-guide/storage.rst:853
# bd3beac5fe0a498ea02316ef386f1218
msgid "Let's suppose your organization is in flux, expanding or contracting as businesses do at times, or budget cuts and unexpected extra tasks to your organization might incur. Or when the organization takes over or otherwise incorporates another."
msgstr ""

#: ../../source/deployment-guide/storage.rst:858
# 579345554fc4473780ff63a02e204aab
msgid "Today's storage coming with a certain price-tag, and tomorrow's with a different one, it can be an interesting exercise to plan for storage to grow organicly as needed, rather than make large investments to provide capacity that may only be used years from today, or not be used at all, or turn out to still not be sufficient."
msgstr ""

#: ../../source/deployment-guide/storage.rst:864
# 38d6cc71e44c486ea5f8386c47ca9a5a
msgid "One may also consider planning for the future expansion of the storage solution chosen today, possibly including significant changes in requirements (larger mailboxes)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:869
# d40f22fbb9254d35a3f0675b8dd01c5c
msgid "Data Retention"
msgstr ""

#: ../../source/deployment-guide/storage.rst:871
# d6ed198eeab24b918e32cc5509c3732d
msgid "Kolab Groupware by default does not delete IMAP spool contents from the filesystem for a period of 69 days."
msgstr ""

#: ../../source/deployment-guide/storage.rst:874
# 1694fbae5ff440859e15aaa4b12ff904
msgid "This means that when a 100 users each have 1 GB of quota, the actual data footprint might grow way beyond 100 GB on disk."
msgstr ""

#: ../../source/deployment-guide/storage.rst:877
# 1afc97cd08e843fcb1cf8f90976b5575
msgid "Depending on the nature of how you use Kolab Groupware, a reasonable expectation can be formulated and used for calculating the likely amount of disk space used in addition to the content that continues to count towards quota."
msgstr ""

#: ../../source/deployment-guide/storage.rst:882
# a4bd50db796b4aa7a15484f4f1b89ade
msgid "For example, if a large amount of message traffic ends up in a shared folder that many users read messages from and respond to (such as might be the case for an info@example.org email address), then around triple the amount of traffic per month will continue to be stored on disk, plus what you decide is still current and not deleted by users (the \"live size\")."
msgstr ""

#: ../../source/deployment-guide/storage.rst:890
# 0cfee533d3f746618d19b78143774c4d
msgid "Shared Folders"
msgstr ""

#: ../../source/deployment-guide/storage.rst:892
# 7d885c75b6404b84b0b4248c99426bb7
msgid "Shared folders (primarily those to which mail is delivered) do not, by default, have any quota on them. They are also not purged by default. As such, they could grow infinitely (until disks run out of space)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:896
# efe031275000404c85cdc383167708bc
msgid "A busy mailing list used for human communications, such as devel@lists.fedoraproject.org, can be expected to grow to as much as 1 GB of data foot print on disk over a period of 3 years -- at a message rate of < ~100 a day and without purging."
msgstr ""

#: ../../source/deployment-guide/storage.rst:901
# 2ff5f93745a848d3979891c3587bf28f
msgid "A mailing list with automated messages generated from applications, such as bugs-list@kde.org, which is notified of all ticket changes for KDE's upstream Bugzilla, can be expected to grow to up to 3.5 GB over the same period -- at a message rate of ~300 per day and without purging."
msgstr ""

#: ../../source/deployment-guide/storage.rst:907
# 3977e9a2b76140b8a862b244370f559c
msgid "User's Groupware Folders"
msgstr ""

#: ../../source/deployment-guide/storage.rst:909
# e3af567a0e0c47baa065ef104ad8666d
msgid "Users tend not to clean up their calendars, removing old appointments that have no bearing on today's views/operations any longer. Kolab Groupware does not (yet) provide means to purge these items. They do however count towards a user's quota."
msgstr ""

#: ../../source/deployment-guide/storage.rst:917
# ec84a409b2644b28bfa035812b1a4fb1
msgid "Capacity"
msgstr ""

#: ../../source/deployment-guide/storage.rst:919
# 4038d116fe7544129a796893a4650801
msgid "Regardless of the volume of storage in total, this section relates to the volume of storage allocated to any one singular specific purpose in Kolab Groupware, and capacity planning in light of that (not the layer providing the storage)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:924
# 5e36b6c0be6c4752a99d13955b8e1413
msgid "Archiving and e-Discovery notwithstanding, the largest chunks of data volume you are going to find in Kolab Groupware are the live IMAP spools."
msgstr ""

#: ../../source/deployment-guide/storage.rst:928
# 070ba01e7d0f483ebb7de0cac86c3559
msgid "Let each individual IMAP spool be considered a volume, or part of a volume if you feel inclined to share volumes across Cyrus IMAP backend instances. Regardless, you need a filesystem **somewhere** (even if the bricks building the volume are distributed) -- the recommended restrictions you should put forth to the individual chunks of storage lay therein."
msgstr ""

#: ../../source/deployment-guide/storage.rst:935
# c8a530008e5949889842759002090aaa
msgid "Saturating the argument to make a point, imagine, if you will, a million users with one gigabyte of data each. Just the original, minimal data footprint is now around and about one petabyte."
msgstr ""

#: ../../source/deployment-guide/storage.rst:939
# 1452e4645bfe49a9887d17fd745c3c3d
msgid "Performing a filesystem check (:command:`fsck.ext4` comes to mind) on a single one petabyte volume will be prohibitively expensive simply considering the duration of the command to complete execution, let alone successful execution, for your **million** users will not have access to their data while the command has not finished -- again, let alone it finished successfully."
msgstr ""

#: ../../source/deployment-guide/storage.rst:946
# 392d684e772d4e51bc37d569dc9e6c1a
msgid "**Solely therefore** would you require a second copy of the groupware payload, now establishing a minimal data footprint to **two** petabyte."
msgstr ""

#: ../../source/deployment-guide/storage.rst:951
# 40659a77926e4a399a8dd110e3c8c6b7
msgid "Also note that the two replicas of one petabyte would, if the replication occurs at the storage volume level, run the risk of corrupting both replicas' filesystems."
msgstr ""

#: ../../source/deployment-guide/storage.rst:955
# 7217b789fa114c13a0d1f60bddfb096f
msgid "Your requirements for data redundancy aside, filesystem checks needing to be performed at least regularly [#]_, if not for the level of likelihood they need to happen because actual recovery is required, should be restricted to a volume of data that enables the check to complete in a timely fashion, and possibly (when no data redundancy is implemented) even within a timeframe you feel comfortable you can hold off your users/customers while they have no access to their data [#]_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:963
# 98dd20b1c9cb49e584406597dbb62246
msgid "For filesystem checks to need to happen regularly, is not to say that such filesystem checks require the node to be taken offline. Should you use Logical Volume Management (LVM) for example, and not allocate 100% of the volume group to the logical volume that holds the IMAP spool, than intermediate filesystem checks can be executed on a snapshot of said logical volume instead, and while the node remains online, to give you a generic impression of the filesystem's health. Given this information, you can schedule a service window should you feel the need to check the actual filesystem."
msgstr ""

#: ../../source/deployment-guide/storage.rst:973
# e037174c4f4d4e3694a1d97354d79986
msgid "A good article on filesystems, the corruption of data and their causes and mitigation strategies has been written up by `LWN`_, `The 2006 Linux Filesystem Workshop`_. This article also explains what it is a filesystem check actually does, and why it is usually configured to be ran after either a certain amount of delay or number of mounts."
msgstr ""

#: ../../source/deployment-guide/storage.rst:997
# 7c1c12763c874609b75e43c764d67fd2
msgid "Cost"
msgstr ""

#: ../../source/deployment-guide/storage.rst:1000
# 0986feba2ac641bd86ea147cc951e1b9
msgid "Footnotes"
msgstr ""

#: ../../source/deployment-guide/storage.rst:1003
# 62708660a1f64dd0b7394d31b41ae700
msgid "Applications may also operate on data not stored on disk at all, which is another common avenue potentially resulting in loss of data -- or *corruption*, which is merely a type of data-loss."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1009
# 54f2680814984016a0aa86fe51343e45
msgid "With read operations, the other node(s) must be blocked from writing, and with write operations, the other node(s) must be blocked from reading and writing."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1015
# a84c75fdc74744138c30daecded7bfc8
msgid "When using ClusterLVM, you would use logical volumes as disks for your guests."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1020
# 2b77a369ad504bd4aef15205ad630200
msgid "When using GFS, you would mount the GFS filesystem partition on each hypervisor and use disk image files."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1025
# a67f3f81005d4bbca993855c9f7e4447
msgid "NFS is a set of protocols operating on the layers 5, 6 and 7 of the `OSI model for networking`_."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1030
# 4eff89a162d64da3a57bedfbaee39cb9
msgid "Execute filesystem checks regularly to increase your level of confidence, that should emergency repairs need to be performed, you are able to recover swiftly."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1034
# f22931e65128453a9b98bb5bb71c9b7e
msgid "The :term:`MTBF` of a stable filesystem has most often been subject to the failure of the underlying disk, with the filesystem unable to recover (in time) from the underlying disk failing (partly)."
msgstr ""

#: ../../source/deployment-guide/storage.rst:1040
# 0d1462e9fd764271a3a0a7bbf49051ac
msgid "Online filesystem checks"
msgstr ""

