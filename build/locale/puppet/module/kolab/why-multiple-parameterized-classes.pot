# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2016, Kolab Systems AG
# This file is distributed under the same license as the Kolab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kolab 16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-26 13:10+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/puppet/module/kolab/why-multiple-parameterized-classes.rst:92
# 89d4831ea3f749bfb456c8b6303cd4cd
msgid "Why Use Multiple Parameterized Classes?"
msgstr ""

#: ../../source/puppet/module/kolab/why-multiple-parameterized-classes.rst:94
# bc4d13f7bac34077b08d8fd269ac9817
msgid "When two nodes provide a part of the same or similar service, such as an IMAP frontend and an IMAP backend, it is desirable to allow them to have different configuration, while their individual configuration is generated from the same template."
msgstr ""

#: ../../source/puppet/module/kolab/why-multiple-parameterized-classes.rst:99
# 7dac4354c91843b79f25b4788f20a0d8
msgid "One example is the :man:`imapd.conf(5)` ``configdir`` setting, which on IMAP frontends is a happy default, but is usually under the same directory hierarchy as meta- and spool-partitions."
msgstr ""

