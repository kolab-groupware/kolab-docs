# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Jeroen van Meeuwen
# This file is distributed under the same license as the Kolab Groupware
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Kolab Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-07 13:58+0200\n"
"PO-Revision-Date: 2014-11-28 00:36+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/projects/p"
"/kolab-documentation/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/architecture-and-design/kolab-wap-api.rst:92
msgid "Kolab Web Administration Panel and API"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:94
msgid ""
"The web administration panel comes with an API in order to allow "
"different, third-party interfaces, as well as the Kolab tool-chain to "
"Kolab Groupware, to execute tasks of an administrative nature."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:98
msgid "The API uses JSON to exchange information with the API client."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:100
msgid ""
"The calls to the Web API are made to a service handler, for its methods "
"handle the request. A call therefore looks as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:103
msgid "**<service>.<method>**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:105
msgid "which is a location beneath the base URL for the API."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:107
msgid ""
"Suppose https://kolab-admin.example.org/api/ is the API base URL, then a "
"call to service method **system.authenticate** would be a POST HTTP/1.1 "
"request to https://kolab-admin.example.org/api/system.authenticate."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:112
msgid "Example for an API call from PHP"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:148
msgid "Example for an API call from Python"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:169
msgid "HTTP Method Convention"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:171
msgid ""
"Two HTTP methods are used: GET and POST. The GET method is generally(!) "
"used for read-only operations, to obtain information, whereas the POST "
"method is used for write operations (modification of objects or session "
"state)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:176
msgid ""
"For GET requests, the parameters (the payload) are appended to the URI "
"requested, https://kolab-"
"admin.example.org/api/domain.info?domain=example.org."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:182
msgid ""
"This restricts GET requests to specifying key-value pairs of payload "
"information only, even though a GET parameter key can be specified more "
"then once, creating a list of values."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:186
msgid ""
"Some read-only operations, such as user.find_by_attributes require the "
"request to pass along multiple attributes with, potentially, multiple "
"search parameters. These types read-only requests are the exception to "
"the rule of using GET for read-only requests, and use POST instead."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:191
msgid ""
"For POST requests, the payload is a JSON-encoded dictionary (array) of "
"parameter keys and values. Only strings are allowed as keys. Values for "
"the payload may contain lists, strings, dictionaries (arrays), integers, "
"floats, etc."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:197
msgid "Service and Method Naming Convention"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:199
msgid ""
"In another rule-of-thumb we outline the naming convention for services "
"and methods."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:202
msgid ""
"Service names consist of an object name either in singular or plural "
"form. The singular form depicts actions are placed against a single "
"instance of an object, such as **object.add**, or when at most one result"
" entry is expected, such as **object.find**."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:207
msgid ""
"The plural form depicts actions that are placed against multiple "
"instances of an object, such as **objects.list** or **objects.search**, "
"and expect zero or more result entries to be returned."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:211
msgid ""
"Method names often imply an action is placed against one or more objects "
"in one request. Certain actions may be confusing though. For these we "
"have the following rules;"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:215
msgid "**Finding an object**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:217
msgid ""
"The method find is always executed against the service with the singular "
"form of the object name. The target of calling a find method is to obtain"
" exactly zero or one instance of an object. The method should fail if the"
" result set contains any number of objects not zero or one."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:223
msgid "Example finding user *John Doe <john.doe@example.org>*:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:230
msgid "**Searching for objects**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:232
msgid ""
"The method search is always executed against the service with the plural "
"form of the object name. The target of calling a search method is to "
"obtain all matches, if any. The method should return any result set "
"containing zero or more results."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:237
msgid "Example searching for user *John Doe <john.doe@example.org>*:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:244
msgid "**Listing objects**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:246
msgid "A list result set contains the following components:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:248
msgid "status"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:250
msgid "result"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:252
msgid "**count** (integer)"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:254
msgid "**list** (dictionary)"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:256
#: ../../source/architecture-and-design/kolab-wap-api.rst:260
msgid "entry id"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:258
#: ../../source/architecture-and-design/kolab-wap-api.rst:262
msgid "additional entry attributes"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:264
msgid "Example listing domains:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:290
msgid "Standard Response Layout"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:292
msgid ""
"The standard response layout offers a location for the request status, an"
" error code and the corresponding message, or a result."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:295
msgid ""
"The status is the first item in the JSON object. It has two possible "
"values: OK or ERROR. Depending on the status of the request, the rest of "
"the JSON output contains a result (OK) or the error details (ERROR)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:299
msgid "The response to a successful request looks as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:308
msgid ""
"The response to a successful request that is expected to return zero or "
"one items, such as find methods, includes a result layout as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:320
msgid ""
"The reponse to a successful request that is expected to return a list of "
"zero, one or more items, such as list and search methods, includes a "
"result layout as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:336
msgid "A failed result however looks like:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:347
msgid "Service Handlers"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:349
msgid "The following service handlers are available:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:351
#: ../../source/architecture-and-design/kolab-wap-api.rst:908
msgid "**domain**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:353
msgid ""
"Domain operations, such as obtaining information about them, or adding, "
"editing and deleting a domain."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:356
msgid "**domains**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:358
msgid "Operations against multiple domains, such as listing or searching."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:360
msgid "**form_value**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:362
msgid ""
"The service handler for form values. Can be used to generate form values "
"(such as passwords for new users), and compose form values for form "
"fields for which the value is to be composed using existing field values "
"from other form fields -- for example the ``mail`` attribute value using "
"a :ref:`admin_rcpt-policy`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:368
msgid "It is also used to validate form input."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:370
msgid "**group**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:372
msgid "Add, modify, delete or obtain information about a group object."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:374
msgid "**groups**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:376
msgid "List or search group objects."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:378
msgid "**group_types**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:380
msgid "The service handler that provides information about group types."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:382
msgid "**resource**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:384
msgid "Add, modify, delete or obtain information about a resource object."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:386
msgid "**resources**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:388
msgid "List or search resource objects."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:390
msgid "**resource_types**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:392
msgid "The service handler that provides information about resource types."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:394
msgid "**role**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:396
msgid "Add, modify, delete or obtain information about a role object."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:398
msgid "**roles**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:400
msgid "List or search role objects."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:402
msgid "**role_types**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:404
msgid "The service handler that provides information about role types."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:406
msgid "**system**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:408
msgid "The main service handler for modifying session state."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:410
#: ../../source/architecture-and-design/kolab-wap-api.rst:898
msgid "**user**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:412
msgid "Add, modify, delete or obtain information about a user object."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:414
msgid "**users**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:416
msgid "List or search user objects."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:418
msgid "**user_types**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:420
msgid "The service handler that provides information about user types."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:423
msgid "The ``domain`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:425
msgid ""
"The ``domain`` service makes available actions against a single parent "
"domain entity, for example 'add' or 'delete'."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:429
msgid "``domain.add`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:431
msgid ""
"Depending on the technology used, quite the variety of things may need to"
" happen when adding a domain to a Kolab Groupware deployment. This is "
"therefore made the responsbility of the API rather than the client."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:439
msgid ""
"The ``type_id`` for the domain. At the time of this writing, only one "
"type ID is available, namely that of a parent domain."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:444
msgid ""
"The domain name is a mandatory parameter to the ``domain.add`` call. Note"
" that it is the ``domain_types.list`` API call that describes what the "
"attribute name for the domain name (the value) should be."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:449
#: ../../source/architecture-and-design/kolab-wap-api.rst:546
#: ../../source/architecture-and-design/kolab-wap-api.rst:766
#: ../../source/architecture-and-design/kolab-wap-api.rst:798
#: ../../source/architecture-and-design/kolab-wap-api.rst:854
#: ../../source/architecture-and-design/kolab-wap-api.rst:938
#: ../../source/architecture-and-design/kolab-wap-api.rst:1022
msgid "Example Usage"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:450
msgid "To add a domain ``example.org``, use the following logic."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:452
#: ../../source/architecture-and-design/kolab-wap-api.rst:547
#: ../../source/architecture-and-design/kolab-wap-api.rst:649
#: ../../source/architecture-and-design/kolab-wap-api.rst:669
#: ../../source/architecture-and-design/kolab-wap-api.rst:1067
msgid ""
"Login to the API, using the :ref:`and-kolab-wap-api-system-authenticate-"
"method`. An example login procedure is included in that section."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:456
msgid ""
"Obtain the list of different domain types, using the process outlined the"
" example usage section of :ref:`and-kolab-wap-api-domain_types-list-"
"method`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:459
msgid "A subsequent call may therefore look like:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:476
#: ../../source/architecture-and-design/kolab-wap-api.rst:1047
msgid "Server-side Implementation Details"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:478
msgid ""
"On the server-side, when a domain is added, an entry is added to the "
"default authentication and authorization database, as configured through "
"the setting ``auth_mechanism`` in the ``[kolab]`` section of "
":manpage:`kolab.conf(5)`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:482
msgid ""
"The authentication database technology referred to has the necessary "
"settings to determine how a new domain can be added. The related settings"
" for LDAP are ``domain_base_dn``, ``domain_scope``, ``domain_filter``, "
"``domain_name_attribute`` (used for the RDN to compose the DN)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:487
msgid ""
"After checking the domain does not already exist (using administrative "
"credentials), the domain is added using the credentials for the logged in"
" user."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:490
msgid ""
"This is an access control verification step only; the logged in user must"
" have 'add' rights on the Domain Base DN."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:493
msgid ""
"Additional steps when adding a (primary) domain name space is to create "
"the databases and populate the root dn."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:521
msgid "``domain.delete`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:524
msgid "``domain.edit`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:527
msgid "``domain.info`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:530
msgid "The ``domains`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:533
msgid "``domains.list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:536
msgid "The ``domain_types`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:541
msgid "``domain_types.list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:543
msgid "List the types of domain objects that the API accepts."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:551
msgid ""
"List the type definitions for the object ``domain``, using :ref:`and-"
"kolab-wap-api-domain_types-list-method`:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:560
msgid "The raw results may look like:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:605
msgid ""
"The part of particular interest is the ``attributes`` section. For a "
"detailed review of its structure, see :ref:`and-kolab-wap-api-attributes-"
"value-format`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:609
msgid ""
"In this example, the ``domain_types.list`` gives us one type definition, "
"and tells us that at least one ``associateddomain`` attribute value is "
"required, since it does not include ``optional: true``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:615
msgid "The ``form_value`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:618
msgid "``form_value.generate`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:620
msgid ""
"This API call allows access to routines that generate attribute values. "
"It accepts data containing the names and values of other attribute values"
" as input, which can be used to generate the new attribute value "
"requested."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:624
msgid "The form_value.generate API call accepts the following parameters:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:626
msgid "**attribute**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:628
msgid "The name of the attribute to generate the new value for."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:630
msgid "**data**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:632
msgid ""
"An array with key-value pairs containing the attribute name (key) and "
"attribute value (value) to use to generate the new value for the "
"attribute supplied in attribute."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:636
msgid ""
"This parameter is required for certain attributes, such as the ``cn``, "
"but not for other attributes, such as ``userPassword``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:639
msgid "**object_type**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:641
msgid "The object type name to generate the value for."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:643
#: ../../source/architecture-and-design/kolab-wap-api.rst:753
msgid "**type_id**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:645
msgid "The object type ID to allow for different policies to be applied."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:648
msgid "Example Usage #1: Generate a User Password"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:653
#: ../../source/architecture-and-design/kolab-wap-api.rst:673
msgid "Issue a call against ``form_value.generate``:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:668
msgid "Example Usage #2: Generate Attribute Values for a Kolab User"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:712
msgid ""
"The ``attributes`` in this example come from the user type definition for"
" ``user_type_id`` 1, and correspond with the field names listed in "
"``auto_form_fields``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:716
msgid ""
"The ``data`` that is listed in each attribute definition in "
"``auto_form_fields`` is submitted alongside the list of attributes."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:721
msgid ":ref:`and-kolab-wap-api-attributes-value-format`"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:724
msgid "``form_value.list_options`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:726
msgid "List options for particular form fields."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:729
msgid "``form_value.validate`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:732
msgid "The ``group`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:735
msgid "``group.add`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:737
msgid "This API call adds a new group."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:739
msgid "The group.add API call accepts the following parameters:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:741
msgid "**cn**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:743
msgid "The Common Name of the group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:745
msgid "**ou**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:747
msgid "The Organizational Unit of the group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:749
msgid "**objectClass**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:751
msgid "The object classes for the group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:755
msgid ""
"The type for this group: Kolab Distribution Group (Static) is 1, Kolab "
"Distribution Group (Dynamic) is 2. See table group_types in WAP database."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:757
msgid "**mail**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:759
msgid "The E-Mail address for this group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:761
msgid "**uniqueMember**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:763
msgid "The accounts that should be part of this group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:767
#: ../../source/architecture-and-design/kolab-wap-api.rst:799
msgid "Login to the API, using the wap_client (see example above)"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:769
msgid "Issue a call against ``group.add``:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:781
msgid "``group.delete`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:784
msgid "``group.edit`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:787
msgid "``group.info`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:789
msgid "This API call returns information about a group."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:791
msgid "The group.info API call accepts the following parameter:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:793
msgid "**dn**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:795
msgid "The Distinguished Name of the group"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:801
msgid "Issue a call against ``group.info``:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:806
msgid "``group.members_list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:808
msgid "The ``group.members_list`` service method lists the members of a group."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:811
msgid "The ``groups`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:814
msgid "``groups.list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:817
msgid "The ``system`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:822
msgid "``system.authenticate`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:824
msgid ""
"Successful authentication is a prerequisite in order to be able to "
"execute any other action against the system. Upon success, the "
"``system.authenticate`` API call returns a session token that MUST be "
"supplied with all subsequent requests for the session, through the HTTP "
"header ``X-Session-Token``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:833
msgid "The username to use when authenticating."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:835
msgid "Note that this should be fully qualified, with the following exceptions:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:837
msgid ""
"The ``cn=Directory Manager`` server administrator account does not belong"
" to any particular domain name space."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:840
msgid ""
"Users may authenticate against the :term:`primary domain` without "
"specifying the primary domain qualification suffix."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:845
msgid "The password."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:849
msgid ""
"For global administrator accounts that have rights to read multiple "
"domain name space Directory Information Tree hierarchies, optionally "
"specify the domain to select as the :term:`working domain`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:855
msgid ""
"The following is a detailed, low-level, step-by-step description of "
"executing a call against the ``system.authenticate`` service method, in "
"Python."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:881
msgid ""
"This is a result that is already interpreted partially, and the raw "
"response looks as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:896
msgid "The result in this response consists of the following components:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:900
msgid "The login name for the user authenticated."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:902
msgid "**userid**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:904
msgid ""
"The ID for the user authenticated, usually a persistent unique attribute "
"associated with the entry in LDAP, except for global server "
"administrators such as ``cn=Directory Manager``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:910
msgid ""
"The current working domain. When no domain had been specified during "
"login, this will default to the configured :term:`primary domain` -- in "
"this case ``example.org``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:914
msgid "**session_token**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:916
msgid ""
"A token uniquely identifying the session. This token should be used for "
"subsequent API calls to associate them with this session."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:919
msgid "To this end, save a dictionary to pass on to subsequent requests."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:923
msgid ""
"To assist in authenticating, the ``pykolab.wap_client`` also includes a "
"function ``authenticate(username=None, password=None, domain=None)``, for"
" which options that are not specified explicitly are pulled from "
":manpage:`kolab.conf(5)`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:930
msgid "``system.capabilities`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:932
msgid ""
"For all service handlers registered, a method ``capabilities`` can be "
"executed listing the methods available and access to them for the "
"currently logged in user. The ``system.capabilities`` API call lists all "
"of the registered service handlers' methods and access for all domains."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1017
msgid "``system.get_domain`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1019
msgid "The get_domain method returns the currently selected working domain."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1033
msgid "``system.quit`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1035
msgid "The quit method ends the session and terminates its validity permanently."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1038
msgid "``system.select_domain`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1040
msgid ""
"Select the domain supplied as the current working domain. By default, "
"users are logged in and have access to what they are authorized for in "
"their own domain name space only. Certain users, such as ``cn=Directory "
"Manager``, have access to all domains. This API call allows such users to"
" select the domain name space they are currently working on."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1049
msgid ""
"On the server-side, when ``system.select_domain`` is called successfully,"
" the selected domain is stored in ``$_SESSION['user']->current_domain``. "
"This is a private property, however, and the rest of the code is to use "
"the public function ``$_SESSION['user']->get_domain()``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1055
msgid "The ``user`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1058
msgid "``user.add`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1060
msgid "Add a user account."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1063
msgid "Example Usage #1: Adding a Kolab User"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1064
msgid ""
"A Kolab User (a groupware account) is, in a default installation, user "
"type ID number 1."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1071
msgid ""
"Obtain the list of different user types, using the process outlined the "
"example usage section of :ref:`and-kolab-wap-api-user_types-list-method`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1074
msgid ""
"In this example, we will be using user type ID 1, for a \"Kolab User\". "
"Its type definition looks as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1206
msgid ""
"It is worth highlighting that only the following input is actually "
"required:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1208
msgid "``givenName``"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1209
msgid "``sn``"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1211
msgid ""
"All other values that are required, either by configured policy or by the"
" LDAP schema, can be generated using this information (including ``uid`` "
"and ``mail``)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1215
msgid "Most commonly, however, you will want to also set:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1217
msgid "``userPassword``,"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1218
msgid "``preferredLanguage``"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1220
msgid ""
"Furthermore, some attributes that are generated may require additional "
"form field input for the generating to properly function -- such as the "
"ASCII-only ``uid`` attribute, where the input may contain utf-8 "
"characters, and transliteration needs to be applied using the "
"``preferredlanguage``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1225
msgid ""
"Long story short, issue a call against the API ``user.add`` method with "
"missing input data:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1247
msgid "Complete the information required:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1270
msgid ""
"To retrieve the resulting user information, including generated values "
"for attribute values and possibly policies that are being applied by LDAP"
" or by another process, use :ref:`and-kolab-wap-api-user-info-method` "
"against the ``id`` in the response."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1276
msgid "``user.delete`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1278
msgid ""
"The ``user.delete`` method takes exactly one parameter, and that is the "
"ID of the user object."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1281
msgid "This ID can be either of two items:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1283
msgid ""
"The persistent unique ID associated with the LDAP object regardless of "
"its current position in the Directory Information Tree hierarchy,"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1286
msgid ""
"The current position in the Directory Information Tree hierarchy, "
"otherwise known as the :term:`distinguished name`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1289
msgid "You can select a user by:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1291
msgid ""
"Selecting the user from a list obtained using the :ref:`and-kolab-wap-"
"api-users-list-method`,"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1293
msgid ""
"Finding exactly one user object (in order to be able to bail out if there"
" are multiple search results) using the :ref:`and-kolab-wap-api-user-"
"find-method`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1312
msgid "``user.edit`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1315
msgid "``user.enable`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1320
msgid "``user.find`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1322
msgid "Find exactly one user object, or none at all, but no more than one."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1324
msgid ""
"This method takes search criteria that help you narrow down what entry "
"you are looking for."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1327
msgid "A successful search for a user would look as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1380
msgid ""
"Should, however, multiple LDAP entries have an attribute value for "
"``givenname`` of \"John\", and ``sn`` of \"Doe\":"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1387
msgid ""
"When zero, one or more results are expected, use the :ref:`and-kolab-wap-"
"api-users-search-method`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1393
msgid "``user.info`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1402
msgid "or using instead:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1421
msgid "``user.search`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1424
msgid "The ``user_types`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1426
msgid "The user_types service ..."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1431
msgid "``user_types.list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1434
msgid "Storage Format for an Object Type"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1436
msgid ""
"The object type definitions are backed by database entries, containing "
"the following attributes per object type:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1439
msgid "**id**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1441
msgid ""
"Of type INT, this attribute is automatically assigned by the database "
"backend, unless specifically supplied on insert."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1444
msgid "**key**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1446
msgid "Of type VARCHAR(16), the key attribute is to hold a machine readable name."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1448
msgid "**name**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1450
msgid ""
"Of type VARCHAR(128), the name attribute is to be the human-readable name"
" for the object type."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1453
msgid "**description**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1455
msgid ""
"Of type VARCHAR(256), the description attribute holds the description for"
" the object type."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1458
msgid "**attributes**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1460
msgid ""
"Of type TEXT, the attributes contains a serialized JSON object with the "
"information needed for the API and client interface to build queries and "
"forms for the object type."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1467
msgid "The ``attributes`` Attribute Value Format"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1469
msgid ""
"The structure of the ``attributes`` attribute value to an object type "
"definition is as follows."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1492
msgid ""
"The ``attributes`` attribute to an object type definition entry holds an "
"array with any or all of the following ``<form_field_type>`` keys:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1495
msgid "**auto_form_fields**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1497
msgid ""
"The ``auto_form_fields`` key holds a list of form field names -- that "
"correspond with the object's attribute names -- for which the value is to"
" be generated automatically, using an API call to the "
"``form_value.generate`` service method."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1502
msgid ""
"The key for each key-value pair indicates the form field name (see above "
"as ``form_field_name``) for which the value is to be generated "
"automatically."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1505
msgid ""
"Each of the keys corresponds with an object attribute name, such as "
"``uid`` or ``displayname``, and its value is an array containing the "
"names of the form fields of which the value is to be submitted as part of"
" the ``form_value.generate`` API call."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst
msgid "Example #1: Composing a User's ``displayName`` Attribute Value"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1512
msgid ""
"Provided the user type's ``auto_form_fields`` contains an array key of "
"``displayname``, the array value for this key could look as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1530
msgid ""
"This indicates to the client application that the value for a form field "
"named ``displayname`` is to be automatically generated using other "
"information provided in the form."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1534
msgid ""
"In order to generate the value for the ``displayname`` form field, it is "
"indicated that, using the ``data`` list, the values of form fields "
"``givenname`` and ``sn`` should be used."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1538
#: ../../source/architecture-and-design/kolab-wap-api.rst:1585
msgid ""
"In a webclient, this would means attaching a JavaScript ``onchange()`` "
"event to the form elements for the ``givenname`` and ``sn`` attributes, "
"so that when the user changes the value for either of these form fields, "
"such event can be handled."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1543
#: ../../source/architecture-and-design/kolab-wap-api.rst:1590
msgid ""
"This ``onchange()`` event should submit a call to "
"``form_value.generate``, with the form field values for the ``givenname``"
" and ``sn`` form fields included in the submission."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1547
#: ../../source/architecture-and-design/kolab-wap-api.rst:1594
msgid ""
"The result of the ``form_value.generate`` call will include a new value "
"for the ``displayname`` form field."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst
msgid "Example #2: Composing a User's ``uid`` Attribute Value"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1552
msgid ""
"Provided the user type's ``auto_form_fields`` contains an array key of "
"``uid``, the array value for this key could look as follows:"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1571
msgid ""
"This indicates to the client application that the value for a form field "
"named ``uid`` is to be automatically generated using other information "
"provided in the form."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1575
msgid ""
"In order to generate the value for the ``uid`` form field, it is "
"indicated that, using the ``data`` list, the values of form fields "
"``givenname``, ``preferredlanguage`` and ``sn`` should be used."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1579
msgid ""
"The use of ``preferredlanguage`` is important, as ``uid`` attributes do "
"not allow non-ASCII characters, but many user's names contain non-ASCII "
"characters. The process of substituting non-ASCII characters to the ASCII"
" representation is called transliteration. The recipient policy "
"documentation illustrates the process of :ref:`admin_rcpt-policy_locale-"
"transliteration`."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1597
msgid "**form_fields**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1599
msgid "The form_fields key holds an array of form fields that require user input."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1601
msgid ""
"The key name for each key => value pair indicates the form field name for"
" which the value is to be supplied by the user."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1604
msgid ""
"Because some attributes can be multi-valued, or have a limited list of "
"options, each defined form field in form_fields can hold an array with "
"additional key-value pairs illustrating the type of form field that "
"should be used, and what format to expect the result value in."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1609
msgid "Additional Information in form_fields"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1611
msgid "**autocomplete**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1613
msgid ""
"A form field of type list can be made to use automatic completion of "
"entries the user starts typing in."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1616
msgid ""
"Examples of autocompletion for list form fields include ``uniqueMember`` "
"(members for groups) and ``nsRoleDN`` (roles for a user)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1620
msgid "**maxlength**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1622
msgid ""
"For a form field of type text or type list, this value holds the maximum "
"length for a given item."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1625
msgid "**type**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1627
msgid "The type is to indicate the type of form field. Options include;"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1629
msgid "**text**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1631
msgid ""
"This is a regular input field of type text, and the default type of a "
"form field."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1634
msgid "Additional parameters for a text form field include maxlength."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1636
msgid "**list**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1638
msgid "A form field of type list is expecting a list of text input values."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1640
msgid ""
"A client web interface could choose to display a textarea with the "
"instructions to supply one item per line, or more advanced (better) "
"equivalents, such as an add/delete widget."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1644
msgid ""
"A client command-line interface could choose to prompt for input values "
"until an empty value is supplied."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1647
msgid ""
"Additional parameters for a list form field include maxlength, which "
"holds the maximum length of each text value in the list."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1652
msgid ""
"You can only use this form field type for attributes that allow multiple "
"values -- otherwise use type **text**."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1655
msgid "**multiselect**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1657
msgid ""
"This form field is a select list, where multiple options may be selected "
"(as opposed to a select list, where only one option may be selected)."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1661
#: ../../source/architecture-and-design/kolab-wap-api.rst:1680
msgid ""
"If the values are not specified already, using the **values** key to the "
"attribute specification, a client interface MUST consult the "
"``form_value.list_options`` API call for option values, as this is also "
"the list that input values are checked against."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1668
msgid ""
"You can only use this form field type for attributes that allow multiple "
"values -- otherwise use type **select**."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1673
msgid ":ref:`and-kolab-wap-api-form_value-list_options`"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1675
msgid "**select**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1677
msgid "This form field is a selection list, of which one option may be selected."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1685
msgid "**value_source**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1687
msgid "The source of values for a list, multiselect or select type."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1689
msgid "**values**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1691
msgid ""
"A static, pre-defined list of values for a list, multiselect or select "
"type."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1693
msgid "**fields**"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1695
msgid ""
"The fields key holds an array of form fields and values for said form "
"fields, that are static."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1698
msgid "One example of such form fields is ``objectclass``."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1701
msgid "The ``users`` Service"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1703
msgid "The users service ..."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1706
msgid "``users.list`` Method"
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1708
msgid "Use ``users.list`` to display paginated lists of users."
msgstr ""

#: ../../source/architecture-and-design/kolab-wap-api.rst:1734
msgid "``users.search`` Method"
msgstr ""

